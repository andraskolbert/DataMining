*------------------------------------------------------------*
User:                -Andris
Date:                15 December 2015
Time:                17:08:11 o'clock
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "15 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:07:26 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                15 December 2015
Time:                17:07:26 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1IMQAEB "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1IMQAEB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "15 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:07:26 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                -Andris";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "15 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:07:26 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                -Andris";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21154      proc freq data=EMWS1.Prof2_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof2_VariableSet noprint;
21155      table ROLE*LEVEL/out=WORK.Prof2META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Prof2META;
21156      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.PROF2_VARIABLESET.
NOTE: The data set WORK.PROF2META has 7 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
21157      proc print data=WORK.Prof2META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Prof2META label noobs;
21158      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21159      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21160      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21161      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21162      run;
 
NOTE: There were 7 observations read from the data set WORK.PROF2META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21163      title10;
MPRINT(EM_DIAGRAM):   title10;
21164      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'Songs';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Songs';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21504      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21505      * Prof2: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Prof2: Generation of macros and macro variables;
21506      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
21507      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
21508      %let EMEXCEPTIONSTRING=;
21509      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
21510      * TRAIN: Prof2;
MPRINT(EM_DIAGRAM):   * TRAIN: Prof2;
21511      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21512      %let EM_ACTION = TRAIN;
21513      %let syscc = 0;
21514      %macro main;
21515         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
21516             options MPRINT;
21517         %end;
21518
21519         filename temp catalog 'sashelp.emexpl.profile_macros.source';
21520         %include temp;
21521         filename temp;
21522
21523         /* Initialize property macro variables */
21524         %SetProperties;
21525
21526         %if %upcase(&EM_ACTION) = CREATE %then %do;
21527
21528             filename temp catalog 'sashelp.emexpl.profile_create.source';
21529             %include temp;
21530             filename temp;
21531             %create;
21532         %end;
21533         %else
21534         %if %upcase(&EM_ACTION) = TRAIN %then %do;
21535
21536             filename temp catalog 'sashelp.emexpl.profile_train.source';
21537             %include temp;
21538             filename temp;
21539             %train;
21540         %end;
21541      %mend main;
21542
21543      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
21544     +%macro SetProperties;
21545     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
21546     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
21547     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
21548     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
21549     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
21550     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
21551     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
21552     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
21553     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
21554     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
21555     +%mend SetProperties;
21558     +%macro makeVarMacros(level= );
21560     +    %let numvars = 0;
21561     +    %let where   = '';
21563     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21564     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
21565     +    %else
21566     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
21568     +    %if &level = INTERVAL %then %do;
21569     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
21570     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21571     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
21572     +    %end;
21573     +    %else %do;
21574     +        %if &level = NOMINAL %then %do;
21575     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
21576     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21577     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
21578     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
21579     +             %end;
21580     +             %else
21581     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
21583     +        %end;
21584     +        %else %do;
21585     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
21586     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21587     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
21588     +        %end;
21589     +    %end;
21591     +    %if &numvars>0 %then %do;
21592     +         %let numloop = %sysfunc(ceil(&numvars/10000));
21593     +         %let loopcount = 0;
21595     +         %do %while((&numloop - &loopcount) > 0);
21596     +             %let first = %eval((&loopcount*10000) + 1);
21597     +             %let last  = %eval(&first + 10000);
21598     +             %let loopcount = %eval(&loopcount +1);
21599     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
21600     +             filename X catalog "&centry";
21601     +             data _null_;
21602     +                length _STRING_ $80;
21603     +                retain _STRING_ ;
21604     +                file X;
21605     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
21607     +                where &where;
21609     +                if _N_=1 then
21610     +                   put '%macro _PROFVAR;';
21612     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
21613     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
21614     +                   if eof then do;
21615     +                      put _STRING_;
21616     +                      put '%mend _PROFVAR;';
21617     +                   end;
21618     +                end;
21619     +                else do;
21620     +                   put _STRING_;
21621     +                  _string_ = TRIM(NAME);
21622     +                   if eof then do;
21623     +                      put _string_;
21624     +                      put '%mend _PROFVAR;';
21625     +                   end;
21626     +                end;
21627     +             run;
21628     +             filename X;
21629     +         %end;
21630     +    %end;
21632     +%mend makeVarMacros;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_TRAIN.SOURCE.
21635     +%macro _looparbor(level=, target=, rules=);
21636     +    %local where;
21638     +    %if (&level eq or &target eq ) %then %goto doenda;
21639     +    %if &rules eq %then &rules = _TEMPRULE;
21641     +    %let lnumvars = 0;
21642     +    %let where   = '';
21644     +    %if &level = INTERVAL %then %do;
21645     +        %let lnumvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
21646     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21647     +             %let lnumvars = %eval(&lnumvars + &EM_NUM_INTERVAL_TARGET);
21648     +    %end;
21649     +    %else %do;
21650     +        %if &level = NOMINAL %then %do;
21651     +            %let lnumvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
21652     +             %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21653     +                 %let lnumvars = %eval(&lnumvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
21654     +        %end;
21655     +        %else %do;
21656     +            %let lnumvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
21657     +            %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21658     +                %let lnumvars = %eval(&lnumvars + &EM_NUM_ORDINAL_TARGET);
21659     +        %end;
21660     +    %end;
21662     +    %if &lnumvars>0 %then %do;
21663     +         %let numloop = %sysfunc(ceil(&lnumvars/10000));
21664     +         %let loopcount = 0;
21666     +         %do %while((&numloop - &loopcount) > 0);
21667     +             %let loopcount = %eval(&loopcount +1);
21668     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
21669     +             filename X catalog "&centry";
21670     +             %inc X;
21672     +             proc arbor data=&EM_NODEID._TMP
21674     +             %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
21675     +                 Criterion=GINI Leafsize=5 Mincatsize = 5
21676     +                 Maxbranch=5 Maxdepth=1
21677     +                 NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
21678     +             %end;
21679     +             %else %do;
21680     +                 Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
21681     +                 Maxbranch=5 Maxdepth=&EM_PROPERTY_MAXDEPTH
21682     +                 MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
21683     +             %end;
21685     +              MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
21687     +                input %_PROFVAR
21689     +                    / level = &level;
21690     +                target _SEG / level=binary;
21692     +                Performance Disk NodeSize=10000;
21693     +                Assess NoValidata measure=MISC;
21694     +                SUBTREE BEST;
21696     +                %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
21697     +                    save IMPORTANCE=_LOOPTEMPRULE;
21698     +                %end;
21699     +                %else %do;
21700     +                    save RULES=_LOOPTEMPRULE;
21701     +                %end;
21702     +             run;
21703     +             quit;
21705     +             %if %sysfunc(exist(_LOOPTEMPRULE)) %then %do;
21706     +                 proc append base=&RULES data=_LOOPTEMPRULE force;
21707     +                 run;
21708     +                 proc datasets lib=work nolist mt=(DATA VIEW);
21709     +                    delete _LOOPTEMPRULE;
21710     +                 run;
21711     +                 quit;
21712     +             %end;
21715     +             filename X;
21716     +         %end;
21717     +     %end;
21719     +   %doenda:
21721     +%mend _looparbor;
21723     +%macro _arbor(target=, rules=, fit=);
21724     +   %local _numnomvars _numordvars _numintvars;
21726     +   %if &target eq  %then %goto doendc;
21727     +   %if &rules eq %then &rules = _TEMPRULE;
21728     +   %if &fit   eq %then &fit   = _FIT;
21730     +   %let _numintvars = %eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
21731     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21732     +       %let _numintvars = %eval(&_numintvars + &EM_NUM_INTERVAL_TARGET);
21735     +   %let _numnomvars =  %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
21736     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21737     +       %let _numnomvars = %eval(&_numnomvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
21739     +   %let _numordvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
21740     +   %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21741     +       %let _numordvars = %eval(&_numordvars + &EM_NUM_ORDINAL_TARGET);
21743     +   proc arbor data=&EM_NODEID._TMP
21745     +   %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
21746     +      Criterion=GINI Leafsize=5 Mincatsize = 5
21747     +      Maxbranch=5 Maxdepth=1
21748     +      NORULELIMIT MAXRULES=&EM_PROPERTY_MAXNUMINPUT
21749     +   %end;
21750     +   %else %do;
21751     +      Criterion=PROBCHISQ alpha=0.2 Leafsize=5 Mincatsize = 5
21752     +      Maxbranch=2 Maxdepth=&EM_PROPERTY_MAXDEPTH
21753     +      MAXRULES=5 Padjust= CHAIDBEFORE DEPTH
21754     +   %end;
21756     +      MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
21758     +      %if &_numintvars %then %do;
21759     +          input %EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED
21761     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21762     +              %EM_INTERVAL_TARGET
21763     +          %end;
21765     +              / level = interval;
21766     +      %end;
21769     +      %if &_numnomvars %then %do;
21770     +          input %EM_BINARY_INPUT %EM_NOMINAL_INPUT %EM_BINARY_REJECTED %EM_NOMINAL_REJECTED
21772     +          %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21773     +              %EM_BINARY_TARGET %EM_NOMINAL_TARGET
21774     +          %end;
21776     +              / level = nominal;
21777     +      %end;
21779     +      %if &_numordvars %then %do;
21780     +         input %EM_ORDINAL_INPUT %EM_ORDINAL_REJECTED
21782     +         %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
21783     +              %EM_ORDINAL_TARGET
21784     +         %end;
21786     +             / level = ordinal;
21787     +      %end;
21789     +      target _SEG / level=binary;
21791     +      Performance Disk NodeSize=10000;
21792     +      Assess
21794     +       %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
21795     +          Validata=&EM_NODEID._VALIDTMP
21796     +      %end;
21797     +      %else %do;
21798     +          NoValidata
21799     +      %end;
21801     +      measure=MISC;
21802     +      SUBTREE BEST;
21804     +      %if &EM_PROPERTY_MAXDEPTH > 1 %then %do;
21805     +          SCORE data=&EM_NODEID._TMP  out=_NULL_ outfit=_FIT
21806     +                role=TRAIN;
21807     +          %if %sysfunc(exist(&EM_NODEID._VALIDTMP, VIEW))>0 %then %do;
21808     +          SCORE data=&EM_NODEID._VALIDTMP  out=_NULL_ outfit=_FIT2
21809     +                role=VALID;
21810     +          %end;
21812     +          save IMPORTANCE=_RULE;
21813     +      %end;
21814     +      %else %do;
21815     +          save RULES=_RULE;
21816     +      %end;
21818     +      ;
21819     +   run;
21820     +   quit;
21822     +   %if %sysfunc(exist(_RULE)) %then %do;
21823     +       proc append base=&RULES data=_RULE force;
21824     +       run;
21825     +       proc datasets lib=work nolist mt=(DATA VIEW);
21826     +          delete _RULE;
21827     +       run;
21828     +       quit;
21829     +   %end;
21831     +   %doendc:
21833     +%mend _arbor;
21835     +%macro tree_profile(SEGMENT=, _sizeDs=, _varsDs=, _fitDs=, _reportDs=);
21836     +   %put &EM_CODEBAR;
21837     +   %put * Filtering input variables ;
21838     +   %put * SEGMENT= &segment;
21839     +   %put &EM_CODEBAR;
21841     +  %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
21842     +  %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
21843     +  %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
21845     +  %let _SEGMENT = &SEGMENT;
21847     +  proc freq data=&EM_IMPORT_DATA noprint ;
21848     +    table &_segment / missing out=&_segment(keep=&_segment count percent) ;
21850     +    %if %EM_FREQ ne %then %do;
21851     +        weight %EM_FREQ;
21852     +        where %EM_FREQ>=0;
21853     +    %end;
21855     +  run ;
21856     +  proc sort data=&_segment;
21857     +     by descending count ;
21858     +  run ;
21860     +  %let dsid       = %sysfunc(open(&_segment));
21861     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
21862     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
21863     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
21865     +  %let dsid=%sysfunc(close(&dsid));
21867     +  %let SEGMENTS=;
21868     +  %let COUNTS=;
21869     +  %let OTHERWHERE=;
21870     +  %let numLevels=;
21871     +  data _segs;
21872     +     length SegmentVariable $32 SegmentValue $200;
21873     +     retain SegmentVariable "&_Segment";
21874     +     label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
21875     +           SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))";
21876     +     drop &_segment cum othercount otherpct numLevels;
21877     +     retain cum othercount otherpct numLevels 0;
21878     +     format Count 8.;
21879     +     set &_segment end=eof;
21881     +     %if &_segformat ne %then %do;
21882     +         SegmentValue= left(put(&_segment, &_segformat));
21883     +     %end;
21884     +     %else %do;
21885     +        %if &_segtype = N %then %do;
21886     +            SegmentValue= left(put(&_segment, best12.));
21887     +        %end;
21888     +        %else %do;
21889     +            SegmentValue = &_segment;
21890     +        %end;
21891     +     %end;
21893     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
21894     +        call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
21895     +        call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
21896     +        numLevels + 1;
21897     +        output;
21898     +     %end;
21899     +     %else %do;
21900     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
21901     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
21902     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
21903     +            numLevels + 1;
21904     +            output;
21905     +         end;
21906     +         else do;
21907     +            %if &_segtype = C or &_segformat ne %then %do;
21908     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
21909     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
21910     +            %end;
21911     +            %else %do;
21912     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
21913     +            %end;
21914     +            othercount = othercount + count;
21915     +            otherpct   = otherpct + percent;
21916     +            if eof then do;
21917     +               SegmentValue = '_OTHER_';
21918     +               count   = othercount;
21919     +               percent = otherpct;
21920     +               numLevels + 1;
21921     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
21922     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
21923     +               output;
21924     +            end;
21925     +         end;
21926     +         cum = cum + percent;
21927     +     %end;
21928     +     if eof then
21929     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
21930     +  run ;
21932     +  title9 " " ;
21933     +  title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_frequency_title,  NOQUOTE, &_Segment))";
21934     +  proc print data=_segs noobs label ;
21935     +  run ;
21936     +  title9;
21937     +  title10;
21939     +  proc append base=&_sizeDs data=_segs force;
21940     +  run;
21942     +  %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED);
21943     +  %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
21944     +      %let numvars= %eval(&EM_NUM_INPUT + &EM_NUM_REJECTED + &EM_NUM_TARGET);
21946     +  /* Loop over segments */
21947     +  %do i=1 %to &numLevels;
21948     +     %if ^&numvars %then %do;
21949     +         %if %sysfunc(exist(&_reportDs)) %then %do;
21950     +             data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
21951     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
21952     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
21953     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
21954     +                     Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
21955     +                     Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
21956     +                length SegmentVariable $32 SegmentValue $200;
21957     +                retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
21958     +                set &_reportDs;
21959     +                Rank = _N_;
21960     +             run;
21961     +             proc append base=&_varsDs data=_TEMPRULE force;
21962     +             run;
21963     +         %end;
21964     +         %goto doskip;
21965     +     %end;
21967     +     %if &_segformat ne %then %do;
21968     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
21969     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
21970     +         %else
21971     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&i";
21972     +     %end;
21973     +     %else %do;
21974     +         %if %nrbquote(&&segments&i) = _OTHER_ %then
21975     +                 %let where= &_segment in(&OTHERWHERE);
21976     +         %else %do;
21977     +             %if &_segtype eq N %then
21978     +                 %let where= &_segment = &&segments&i;
21979     +             %else
21980     +                 %let where= &_segment = "&&segments&i";
21981     +         %end;
21982     +     %end;
21984     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
21985     +        set &EM_IMPORT_DATA(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
21986     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
21987     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
21988     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
21989     +        if &where then
21990     +           _seg= 1 ;
21991     +        else
21992     +           _seg= 0 ;
21993     +     run ;
21995     +      %if (&EM_IMPORT_VALIDATE ne ) and (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE, VIEW))) %then %do;
21996     +          data &EM_NODEID._VALIDTMP / view=&EM_NODEID._VALIDTMP ;
21997     +             set &EM_IMPORT_VALIDATE(keep=%EM_INTERVAL_INPUT %EM_INTERVAL_REJECTED %EM_INTERVAL_TARGET
21998     +               %EM_BINARY_INPUT %EM_BINARY_REJECTED %EM_BINARY_TARGET
21999     +               %EM_ORDINAL_INPUT  %EM_NOMINAL_INPUT %EM_ORDINAL_REJECTED %EM_NOMINAL_REJECTED
22000     +               %EM_ORDINAL_TARGET %EM_NOMINAL_TARGET &_segment %EM_FREQ);
22002     +             if &where then
22003     +                _seg= 1 ;
22004     +              else
22005     +                 _seg= 0 ;
22006     +          run ;
22007     +      %end;
22009     +     %if  (%eval(&EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED + &EM_NUM_INTERVAL_TARGET +
22010     +               &EM_NUM_BINARY_INPUT + &EM_NUM_BINARY_REJECTED + &EM_NUM_BINARY_TARGET +
22011     +               &EM_NUM_ORDINAL_INPUT  + &EM_NUM_NOMINAL_INPUT + &EM_NUM_ORDINAL_REJECTED  + &EM_NUM_NOMINAL_REJECTED +
22012     +               &EM_NUM_ORDINAL_TARGET +  &EM_NUM_NOMINAL_TARGET) < 10000) %then %do;
22013     +         %_arbor(target=_SEG, rules=_TEMPRULE, FIT=_FIT);
22014     +     %end;
22015     +     %else %do;
22016     +        %_looparbor(level=INTERVAL, target=_SEG, rules=_TEMPRULE);
22017     +        %_looparbor(level=NOMINAL,  target=_SEG, rules=_TEMPRULE);
22018     +        %_looparbor(level=ORDINAL,  target=_SEG, rules=_TEMPRULE);
22019     +     %end;
22021     +     /* Keeping the important variables */
22022     +     %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
22023     +         data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
22024     +            length Name $32;
22025     +            label Name = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))";
22026     +            retain Name;
22028     +            set _temprule;
22030     +            where stat in('VARIABLE','WORTH');
22032     +            if stat = 'VARIABLE' then
22033     +               Name = character_value;
22034     +            else
22035     +               output;
22036     +         run;
22038     +         proc sort data=_TEMPRULE;
22039     +            by descending Worth;
22040     +         run;
22042     +         %if %sysfunc(exist(&_reportDs)) %then %do;
22043     +             data _TEMPRULE;
22044     +                set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT) &_reportDs;
22045     +             run;
22046     +             proc sort data= _TEMPRULE nodupkey;
22047     +                by variable;
22048     +             run;
22049     +             proc sort data=_TEMPRULE;
22050     +                by descending Worth;
22051     +             run;
22052     +         %end;
22053     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
22054     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22055     +                    SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22056     +                    Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22057     +                    Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
22058     +                    Worth           = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
22059     +            length SegmentVariable $32 SegmentValue $200;
22060     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
22061     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
22062     +               set _TEMPRULE(obs=&EM_PROPERTY_MAXNUMINPUT);
22063     +            %end;
22064     +            %else %do;
22065     +                set _TEMPRULE;
22066     +            %end;
22067     +            Rank = _N_;
22068     +            if _N_=1 and worth ne . and (worth < &EM_PROPERTY_MINWORTH) then do;
22069     +               put "&EM_CODEBAR";
22070     +               put "* No input variable meet the minimum worth criterion of &EM_PROPERTY_MINWORTH.";
22071     +               put "* You may identify profile variables by lowering this threshold, ";
22072     +               put "* or by increasing the maximum depth of the decision tree used.";
22073     +               put "&EM_CODEBAR";
22074     +            end;
22075     +         run;
22076     +     %end;
22077     +     %else %do;
22078     +         %if %sysfunc(exist(&_reportDs)) %then %do;
22079     +             data _TEMPRULE;
22080     +                set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0)) &_reportDs;
22081     +             run;
22082     +             proc sort data= _TEMPRULE nodupkey;
22083     +                by variable;
22084     +             run;
22085     +             proc sort data=_TEMPRULE;
22086     +                by descending Importance;
22087     +             run;
22088     +         %end;
22089     +         data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Importance);
22090     +              label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22091     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22092     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22093     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
22094     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
22095     +            length SegmentVariable $32 SegmentValue $200;
22096     +            retain SegmentVariable "&_segment" SegmentValue "&&segments&i";
22097     +            %if ^%sysfunc(exist(&_reportDs)) %then %do;
22098     +               set _TEMPRULE(rename=(NAME=Variable) where=(IMPORTANCE >0));
22099     +            %end;
22100     +            %else %do;
22101     +                set _TEMPRULE;
22102     +            %end;
22103     +            Rank = _N_;
22104     +         run;
22105     +     %end;
22107     +     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_title,  NOQUOTE, &_Segment, &&segments&i, &&counts&i))";
22108     +     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_worth2_title,  NOQUOTE))";
22110     +     %if &EM_PROPERTY_PRINTWORTH eq Y %then %do;
22111     +         %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
22112     +             proc print data=_TEMPRULE noobs label ;
22113     +                var Variable Worth Rank;
22114     +                where worth ne .;
22115     +             run ;
22116     +             data _TEMPRULE;
22117     +                set _TEMPRULE;
22118     +                where worth eq . or (worth >= &EM_PROPERTY_MINWORTH);
22119     +             run;
22120     +         %end;
22121     +         %else %do;
22122     +             proc print data=_TEMPRULE noobs label ;
22123     +                var Variable Importance Rank;
22124     +                where importance ne .;
22125     +             run ;
22126     +         %end;
22128     +     %end ;
22130     +     title9;
22131     +     title10;
22133     +     proc append base=&_varsDs data=_TEMPRULE force;
22134     +     run;
22136     +     %if %sysfunc(exist(_FIT)) %then %do;
22137     +         data _FIT;
22138     +            length SegmentVariable $32 SegmentValue $200;
22139     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&i";
22141     +            %if %sysfunc(exist(_FIT2)) %then %do;
22142     +                merge _FIT(keep=_MISC_) _FIT2(keep=_VMISC_);
22143     +            %end;
22144     +            %else %do;
22145     +                set _FIT(keep=_MISC_);
22146     +            %end;
22148     +         run;
22149     +         proc append base=&_fitDs data=_FIT force;
22150     +         run;
22151     +     %end;
22153     +     %doskip:
22155     +     proc datasets lib=work nolist mt=(DATA VIEW);
22156     +        delete _SEGS &EM_NODEID._TMP &EM_NODEID._VALIDTMP _STAT
22158     +        %if %sysfunc(exist(_TEMPRULE)) %then %do;
22159     +            _TEMPRULE
22160     +        %end;
22161     +        %if %sysfunc(exist(_FIT))>0 %then %do;
22162     +            _FIT
22163     +        %end;
22164     +        %if %sysfunc(exist(_FIT2))>0 %then %do;
22165     +            _FIT2
22166     +        %end;
22167     +     ;
22168     +     run;
22169     +     quit;
22170     +  %end ;
22171     +%mend tree_profile;
22173     +/* This macro loops over segment variables and determines important variables */
22174     +%macro em_profile(_segmentvar= , _sizeDS=WORK._SEGMENTSIZE,
22175     +                  _varsDs=WORK._SELECTEDVARS, _fitDs=WORK._FITSTAT, _reportDs=);
22177     +    %if _sizeDs eq %then %let _sizeDs = WORK._SEGMENTSIZE;
22178     +    %if _varsDs eq %then %let _varsDs = WORK._SELECTEDVARS;
22179     +    %if _fitDs  eq %then %let _fitDs  = WORK._FITSTAT;
22181     +    %if _segmentvar eq %then %do;
22182     +        %put &EM_CODEBAR;
22183     +        %put * No segment variable defined ;
22184     +        %put &EM_CODEBAR;
22185     +        %goto doendep;
22186     +    %end;
22188     +    %let sndx = 0;
22190     +    %let svar = &_segmentvar;
22191     +    %if &svar ne %then %do;
22192     +        %makeVarMacros(LEVEL=INTERVAL);
22193     +        %makeVarMacros(LEVEL=NOMINAL);
22194     +        %makeVarMacros(LEVEL=ORDINAL);
22195     +    %end;
22197     +    %do %while(&svar ne );
22198     +        %let sndx= %eval(&sndx+1);
22199     +        %let svar = %scan(&_segmentvar, &sndx,' ');
22200     +        %if &svar ne %then
22201     +            %tree_profile(segment=&svar, _sizeDS=&_sizeDs, _varsDs=&_varsDs, _fitDs=&_fitDs, _reportDs=&_reportDs);
22202     +    %end ;
22204     +    proc datasets lib=&EM_LIB nolist;
22205     +       delete &EM_NODEID._MACS(mt=catalog);
22206     +    run;
22208     +    %doendep:
22209     +%mend em_profile;
22211     +%macro segmentSummary(SEGMENT=, _VARSDS=, FormatFref=);
22212     +   %put &EM_CODEBAR;
22213     +   %put * Summarizing variables ;
22214     +   %put * SEGMENT= &segment;
22215     +   %put &EM_CODEBAR;
22217     +  %if (&_varsDs eq ) or ^%sysfunc(exist(&_VARSDS)) or ^%sysfunc(exist(&segment)) %then %goto doends;
22219     +  %let _SEGMENT = &SEGMENT;
22221     +  %let dsid       = %sysfunc(open(&_segment));
22222     +  %let segnum     = %sysfunc(varnum(&dsid, &_segment));
22223     +  %let _segtype   = %sysfunc(vartype(&dsid, &segnum));
22224     +  %let _segformat = %sysfunc(varfmt(&dsid, &segnum));
22226     +  %let dsid=%sysfunc(close(&dsid));
22228     +  %let SEGMENTS=;
22229     +  %let COUNTS=;
22230     +  %let OTHERWHERE=;
22231     +  %let numLevels=;
22232     +  data _null_;
22233     +     retain cum othercount otherpct  numLevels 0;
22234     +     format Count 8.;
22235     +     set &_segment end=eof;
22237     +     %if &_segformat ne %then %do;
22238     +         SegmentValue= strip(put(&_segment, &_segformat));
22239     +     %end;
22240     +     %else %do;
22241     +        %if &_segtype = N %then %do;
22242     +            SegmentValue= strip(put(&_segment, best12.));
22243     +        %end;
22244     +        %else %do;
22245     +            SegmentValue = &_segment;
22246     +        %end;
22247     +     %end;
22249     +     %if &EM_PROPERTY_PROFILEALL eq Y %then %do;
22250     +         call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
22251     +         call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
22252     +         numLevels + 1;
22253     +         output;
22254     +     %end;
22255     +     %else %do;
22256     +         if (cum < &EM_PROPERTY_OTHERPERCENTCUTOFF) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
22257     +            call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
22258     +            call symput('COUNTS' !!strip(put(_N_,BEST.)),  strip(put(count, best.))) ;
22259     +            numLevels + 1;
22260     +            output;
22261     +         end;
22262     +         else do;
22263     +            %if &_segtype = C or &_segformat ne %then %do;
22264     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !!
22265     +                                     quote(strip(tranwrd(SegmentValue, '"','""'))));
22266     +            %end;
22267     +            %else %do;
22268     +                call symput('OTHERWHERE'  ,symget('OTHERWHERE'  ) !! ' ' !! strip(SegmentValue));
22269     +            %end;
22270     +            othercount = othercount + count;
22271     +            otherpct   = otherpct + percent;
22272     +            if eof then do;
22273     +               SegmentValue = '_OTHER_';
22274     +               count   = othercount;
22275     +               percent = otherpct;
22276     +               numLevels + 1;
22277     +               call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
22278     +               call symput('COUNTS'  !! strip(put(numLevels,BEST.)),  strip(put(count, best.))) ;
22279     +               output;
22280     +            end;
22281     +         end;
22282     +         cum = cum + percent;
22283     +     %end;
22284     +     if eof then
22285     +        call symput('numLevels', strip(put(numLevels,BEST.))) ;
22286     +  run ;
22288     +  /* Loop over segments */
22289     +  %do S = 1 %to &numLevels;
22290     +     %if &_segformat ne %then %do;
22291     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
22292     +             %let where= strip(put(&_segment, &_segformat)) in(&OTHERWHERE);
22293     +         %else
22294     +             %let where= strip(put(&_segment, &_segformat)) = "&&segments&s";
22295     +     %end;
22296     +     %else %do;
22297     +         %if %nrbquote(&&segments&s) = _OTHER_ %then
22298     +                 %let where= &_segment in(&OTHERWHERE);
22299     +         %else %do;
22300     +             %if &_segtype eq N %then
22301     +                 %let where= &_segment = &&segments&s;
22302     +             %else
22303     +                 %let where= &_segment = "&&segments&s";
22304     +         %end;
22305     +     %end;
22307     +     %let SEGVARS=;
22308     +     %let SEGCLASS=;
22309     +     data _tempStat;
22310     +        set &_varsDs;
22311     +        where  SegmentVariable="&_segment" and SegmentValue="&&segments&s";
22312     +        if Type eq 'I' then
22313     +           call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
22314     +        else
22315     +           call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
22316     +     run ;
22318     +     %let _nobs = 0;
22319     +     %let dsid = %sysfunc(open(_tempStat));
22320     +     %if &dsid %then %do;
22321     +         %let _nobs = %sysfunc(attrn(&dsid, NLOBS));
22322     +         %let dsid = %sysfunc(close(&dsid));
22323     +     %end;
22324     +     %if &_nobs<1 %then %goto doskips;
22326     +     proc sort data=_tempStat;
22327     +        by Variable;
22328     +     run;
22330     +     data &EM_NODEID._TMP / view=&EM_NODEID._TMP ;
22331     +        set &EM_IMPORT_DATA;
22333     +        where &where;
22335     +        %if (&FormatFref ne ) and (&segvars ne ) %then %do;
22336     +            %inc &FormatFref;
22337     +        %end;
22338     +     run;
22340     +     /* Profile Segment */
22341     +     %if &segclass ne %then %do;
22342     +         %class_profile(DATA=&EM_NODEID._TMP, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
22343     +         data _CLASS;
22344     +            length SegmentVariable $32 SegmentValue $200;
22345     +            retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
22346     +            label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22347     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22348     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22349     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22350     +            set _CLASS;
22351     +         run;
22352     +         proc append base=&EM_USER_CLASSDIST data=_CLASS force;
22353     +         run;
22354     +         data _tempStat;
22355     +            merge _tempStat _STAT;
22356     +            by VARIABLE;
22357     +         run;
22358     +     %end;
22359     +     %if &segvars ne %then %do;
22360     +         %var_profile(DATA=&EM_NODEID._TMP, OUTPUT=_INTERVAL, VARS=&SEGVARS,
22361     +                           STAT=_STAT, BIN=N, FREQ=%EM_FREQ, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
22362     +         data _INTERVAL;
22363     +             length SegmentVariable $32 SegmentValue $200;
22364     +             retain SegmentVariable "&_Segment" SegmentValue "&&segments&s";
22365     +             label Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22366     +                   value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22367     +                   count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22368     +                   percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22369     +             set _INTERVAL;
22370     +         run;
22372     +         proc append base=&EM_USER_INTDIST data=_INTERVAL force;
22373     +         run;
22375     +         proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
22376     +            by VARIABLE;
22377     +         run;
22378     +         data _tempStat;
22379     +            merge _tempStat _STAT;
22380     +            by VARIABLE;
22381     +         run;
22383     +     %end;
22385     +     proc sort data=_tempStat;
22386     +        by Rank;
22387     +     run;
22388     +     proc append base=&EM_USER_STATS data=_tempStat force;
22389     +     run;
22391     +     %doskips:
22393     +     proc datasets lib=work nolist mt=(DATA VIEW);
22394     +        delete _segment &EM_NODEID._TMP _interval _class
22396     +        %if %sysfunc(exist(_tempStat))>0 %then %do;
22397     +            _tempStat
22398     +        %end;
22399     +     ;
22400     +     run;
22401     +     quit;
22404     +  %end ;
22405     +%mend segmentSummary;
22407     +%macro train;
22409     +   /* Retrieve data set name */
22410     +   %EM_GETNAME(KEY=SIZE,       TYPE=DATA);
22411     +   %EM_GETNAME(KEY=FIT,        TYPE=DATA);
22412     +   %EM_GETNAME(KEY=STATS,      TYPE=DATA);
22413     +   %EM_GETNAME(KEY=WORTH,      TYPE=DATA);
22414     +   %EM_GETNAME(KEY=IMPORTANCE, TYPE=DATA);
22415     +   %EM_GETNAME(KEY=CLASSDIST,  TYPE=DATA);
22416     +   %EM_GETNAME(KEY=INTDIST,    TYPE=DATA);
22417     +   %EM_GETNAME(KEY=SELVARS,    TYPE=DATA);
22419     +   /* Delete previous data sets */
22420     +   proc datasets lib=&EM_LIB nolist;
22421     +      delete &EM_NODEID._SIZE  &EM_NODEID._STATS &EM_NODEID._FIT &EM_NODEID._WORTH
22422     +             &EM_NODEID._IMPORTANCE &EM_NODEID._SELVARS
22423     +             &EM_NODEID._CLASSDIST  &EM_NODEID._INTDIST &EM_NODEID._MACS(mt=catalog);
22424     +   run;
22426     +   %if (%sysfunc(exist(&EM_IMPORT_DATA))<1 and %sysfunc(exist(&EM_IMPORT_DATA, VIEW))<1)
22427     +       or (&EM_IMPORT_DATA eq ) %then %do;
22428     +       %let  EMEXCEPTIONSTRING = exception.server.emtool.PROFNEEDTRAINDATASET;
22429     +       %goto doendpt;
22430     +   %end;
22432     +    proc sort data=&EM_DATA_VARIABLESET;
22433     +       by Name;
22434     +    run;
22436     +    %let _segmentvar = %EM_SEGMENT %EM_TREATMENT;
22438     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq SEGMENT) %then
22439     +        %let _segmentvar= &_segmentvar %EM_BINARY_TARGET %EM_NOMINAL_TARGET %EM_ORDINAL_TARGET;
22441     +    /* Add report variables */
22442     +    %let REPORT_VARS = ;
22443     +    %if  (%upcase(&EM_PROPERTY_TARGETROLE) eq REPORT) %then %do;
22444     +        %let REPORT_VARS = %EM_TARGET;
22445     +    %end;
22446     +    %if &EM_PROPERTY_USEREPORTVARS eq Y %then %do;
22447     +        %let REPORT_VARS = &REPORT_VARS %EM_REPORT_VARS;
22448     +    %end;
22450     +    %if &REPORT_VARS ne %then %do;
22451     +        data _tempreport;
22452     +           length Variable $32;
22454     +        %let rndx= 0 ;
22455     +        %let rvar  = &REPORT_VARS;
22456     +        %do %while( &rndx < &EM_PROPERTY_MAXNUMREPORT and &rvar ne  ) ;
22457     +            %let rndx= %eval(&rndx+1);
22458     +            %let rvar = %scan(&REPORT_VARS, &rndx, ' ') ;
22459     +            %if &rvar ne %then %do;
22460     +                Variable="&rvar"; output;
22461     +            %end ;
22462     +        %end;
22464     +        run;
22465     +    %end;
22467     +    %em_profile(_segmentvar=&_segmentvar, _sizeDs=&EM_USER_SIZE,
22468     +                _varsDs=&EM_USER_SELVARS, _fitDs=&EM_USER_FIT, _reportDs=_tempReport);
22470     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) and (&REPORT_VARS eq ) %then %goto doendpt;
22472     +    %if ^%sysfunc(exist(&EM_USER_SELVARS)) %then %do;
22473     +        data &EM_USER_SELVARS;
22474     +           set _tempreport;
22475     +        run;
22476     +    %end;
22478     +    proc sort data=&EM_USER_SELVARS;
22479     +       by Variable;
22480     +    run;
22481     +    data &EM_USER_SELVARS;
22482     +       length Type $1;
22483     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
22484     +       merge &EM_USER_SELVARS(in=a) &EM_DATA_VARIABLESET(keep=NAME LEVEL LABEL rename=(NAME=Variable));
22485     +       by Variable;
22486     +       if LABEL eq '' then LABEL=VARIABLE;
22487     +       if a then do;
22488     +          if LEVEL = 'INTERVAL' then Type = 'I';
22489     +          else Type = 'C';
22490     +           output;
22491     +       end;
22492     +       drop LEVEL;
22493     +    run;
22495     +    proc sort data=&EM_USER_SELVARS out=_SummaryVars nodupkey;
22496     +       by Variable;
22497     +    run;
22498     +    %if &EM_PROPERTY_MAXDEPTH > 1 %then %let selStat = Importance;
22499     +    %else
22500     +        %let selStat = Worth;
22502     +   data &EM_USER_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank &selStat);
22503     +       length Type $1;
22504     +       label Type = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel,  NOQUOTE))";
22505     +       set _SummaryVars;
22506     +       SegmentVariable= "_OVERALL_"; SegmentValue= "&EM_IMPORT_DATA"  ;
22507     +       rank = .; &selStat=.;
22508     +       if Label eq '' then Label=Variable;
22509     +   run;
22511     +    /* Profile Entire Data */
22512     +   %put &EM_CODEBAR;
22513     +   %put * Profile Entire Data ;
22514     +   %put &EM_CODEBAR;
22516     +    %let segvars=;
22517     +    %let segclass=;
22518     +    data _null_;
22519     +       set  &EM_USER_STATS;
22520     +       if Type = 'I' then
22521     +          call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
22522     +       else
22523     +          call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
22524     +    run ;
22526     +    %if &segclass ne %then %do;
22527     +        %class_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_CLASS, VARS=&SEGCLASS, STAT=_STAT, FREQ=%EM_FREQ);
22528     +        data _CLASS;
22529     +           length SegmentVariable $32 SegmentValue $200;
22530     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
22531     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22532     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22533     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22534     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22535     +           set _CLASS;
22536     +        run;
22537     +        proc append base=&EM_USER_CLASSDIST data=_CLASS force;
22538     +        run;
22540     +        proc sort data=_STAT;
22541     +           by VARIABLE;
22542     +        run;
22543     +        data &EM_USER_STATS;
22544     +            merge  &EM_USER_STATS _STAT;
22545     +            by VARIABLE;
22546     +        run;
22547     +    %end;
22548     +    %if &segvars ne %then %do;
22549     +        /* Computing Min and Max for Interval Variables */
22550     +        %var_profile(DATA=&EM_IMPORT_DATA, OUTPUT=_INTERVAL, VARS=&SEGVARS,
22551     +                          STAT=_STAT, BINDATA=DATA_STAT, FREQ=%EM_FREQ, BIN=Y, NUMBARS= &EM_PROPERTY_NUMHISTBARS);
22552     +        data _INTERVAL;
22553     +           length SegmentVariable $32 SegmentValue $200;
22554     +           retain SegmentVariable "_OVERALL_" SegmentValue "&EM_IMPORT_DATA";
22555     +           label  variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22556     +                  value    = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,  NOQUOTE))"
22557     +                  count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))"
22558     +                  percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))";
22559     +           set _INTERVAL;
22560     +        run;
22562     +        proc append base=&EM_USER_INTDIST data=_INTERVAL force;
22563     +        run;
22565     +        proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
22566     +           by VARIABLE;
22567     +        run;
22568     +        data &EM_USER_STATS;
22569     +            merge  &EM_USER_STATS _STAT;
22570     +            by VARIABLE;
22571     +        run;
22572     +    %end;
22574     +    filename X catalog "&EM_LIB..&EM_NODEID._INTERVAL.FORMAT.source";
22576     +    %if %sysfunc(exist(&EM_LIB..&EM_NODEID._INTERVAL, 'CATALOG')) %then %do;
22577     +        proc datasets lib=&EM_LIB nolist;
22578     +           delete &EM_NODEID._INTERVAL(mt=catalog);
22579     +        run;
22580     +    %end;
22582     +    %if %sysfunc(exist(DATA_STAT)) %then %do;
22583     +        data _null_;
22584     +           file X;
22586     +           %let dsid    =%sysfunc(open(DATA_STAT));
22587     +           %let namenum = %sysfunc(varnum(&dsid, VARIABLE));
22588     +           %let fmtnum  = %sysfunc(varnum(&dsid, FORMAT));
22589     +           %let obs = %sysfunc(fetch(&dsid));
22591     +           put 'format' ;
22593     +           %let _count = 0;
22594     +           %let _VARS=;
22595     +           %do %while(&obs=0);
22597     +               %let _count = %eval(&_count +1);
22598     +               %let _name = %sysfunc(getvarc(&dsid, &namenum));
22599     +               %let _VARS = &_VARS &_name;
22600     +               %let _fmtname = %sysfunc(getvarc(&dsid, &fmtnum));
22601     +               %do;
22602     +                  put "&_name &_fmtname..";
22603     +               %end;
22604     +               %let obs = %sysfunc(fetch(&dsid));
22605     +           %end;
22606     +           %let dsid=%sysfunc(close(&dsid));
22607     +           put ';';
22608     +        run;
22609     +    %end;
22611     +    /* Profile Segments */
22612     +    %if _segmentvar eq %then %goto doendpt;
22613     +    %let sndx = 0;
22615     +    %let svar = &_segmentvar;
22616     +    %do %while(&svar ne );
22617     +        %let sndx= %eval(&sndx+1);
22618     +        %let svar = %scan(&_segmentvar, &sndx,' ');
22619     +        %if &svar ne %then
22620     +            %segmentSummary(segment=&svar, _varsDs=&EM_USER_SELVARS, FormatFref=X);
22621     +    %end ;
22623     +    filename X;
22625     +    %doendpt:
22628     +    /* Set reports for the node */
22629     +    %let _keys= SIZE STATS CLASSDIST INTDIST;
22631     +    %if %sysfunc(exist( &EM_USER_CLASSDIST)) or  %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
22632     +        %if %sysfunc(exist(&EM_USER_INTDIST)) %then %do;
22633     +            data &EM_USER_INTDIST;
22634     +               set &EM_USER_INTDIST;
22635     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22636     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22637     +                     Color           = "%sysfunc(sasmsg(sashelp.dmine, rpt_color_vlabel,  NOQUOTE))";
22638     +               if SegmentVariable = '_OVERALL_' then Color = 1;
22639     +               else Color = 0;
22640     +            run;
22641     +        %end;
22642     +        %if %sysfunc(exist(&EM_USER_CLASSDIST)) %then %do;
22643     +            data &EM_USER_CLASSDIST;
22644     +               set &EM_USER_CLASSDIST;
22645     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22646     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22647     +                     Groupindex      = "%sysfunc(sasmsg(sashelp.dmine, rpt_groupIndex_vlabel,  NOQUOTE))";
22648     +               if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
22649     +               else GroupIndex = 1;
22650     +            run;
22651     +        %end;
22653     +        %let svar = &_segmentvar;
22654     +        %let sndx = 0;
22655     +        %do %while(&svar ne );
22656     +            %let sndx= %eval(&sndx+1);
22657     +            %let svar = %scan(&_segmentvar, &sndx,' ');
22658     +            %if &svar ne %then %do;
22659     +                %let autodisplay = N;
22660     +                %if &sndx = 1 %then
22661     +                    %let autodisplay = Y;
22662     +                %EM_REPORT(KEY=&_keys, VIEWTYPE=PROFILEVIEW, DESCRIPTION=Profileview, SEGMENTVALUE=&svar,
22663     +                      STATS=STATS, SIZE=SIZE, CLASSDIST=CLASSDIST, INTDIST=INTDIST, AUTODISPLAY=&autodisplay, BLOCK=Plot,
22664     +                      LOCALIZE=Y, COLOR=COLOR);
22665     +            %end;
22666     +        %end ;
22667     +    %end;
22669     +    %if %sysfunc(exist( &EM_USER_STATS)) %then %do;
22670     +        %if &EM_PROPERTY_MAXDEPTH = 1 %then %do;
22671     +            data &EM_USER_WORTH;
22672     +               set &EM_USER_STATS;
22673     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22674     +                     SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22675     +                     Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22676     +                     Rank   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))"
22677     +                     Worth  = "%sysfunc(sasmsg(sashelp.dmine, rpt_worth_vlabel,  NOQUOTE))";
22678     +               where WORTH ne .;
22679     +            run;
22680     +            %EM_REPORT(KEY=WORTH,     VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=WORTH,
22681     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=WORTH, DESCRIPTION=profworth, BLOCK=Plot,
22682     +                  LOCALIZE=Y, NCOLS=1);
22683     +        %end;
22684     +        %else %do;
22685     +            data &EM_USER_IMPORTANCE;
22686     +               set &EM_USER_STATS;
22687     +               label SegmentVariable = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvariable_vlabel,  NOQUOTE))"
22688     +                  SegmentValue    = "%sysfunc(sasmsg(sashelp.dmine, rpt_segmentvalue_vlabel,  NOQUOTE))"
22689     +                  Variable        = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel,  NOQUOTE))"
22690     +                  Importance      = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel,  NOQUOTE))"
22691     +                  Rank            = "%sysfunc(sasmsg(sashelp.dmine, rpt_rank_vlabel,  NOQUOTE))";
22692     +               where IMPORTANCE ne .;
22693     +            run;
22694     +            %EM_REPORT(KEY=IMPORTANCE, VIEWTYPE=BAR,  BY=SEGMENTVALUE, X=VARIABLE, FREQ=IMPORTANCE,
22695     +                  AUTODISPLAY=Y, REPORTID=SEGMENTVARIABLE, IDVALUE=IMPORTANCE, DESCRIPTION=profimportance, BLOCK=Plot,
22696     +                  LOCALIZE=Y, NCOLS=1);
22697     +       %end;
22698     +    %end;
22700     +    %if %sysfunc(exist( &EM_USER_SIZE)) %then %do;
22701     +        %if %sysfunc(exist( &EM_USER_FIT)) %then %do;
22702     +            data &EM_USER_SIZE;
22703     +               merge &EM_USER_SIZE &EM_USER_FIT;
22704     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
22705     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
22706     +               format PERCENT 5.2;
22707     +               format COUNT 12.;
22708     +            run;
22709     +        %end;
22710     +        %else %do;
22711     +            data &EM_USER_SIZE;
22712     +               set &EM_USER_SIZE;
22713     +               label percent  = "%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel,  NOQUOTE))"
22714     +                     count    = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel,  NOQUOTE))";
22715     +               format PERCENT 5.2;
22716     +               format COUNT 12.;
22717     +            run;
22718     +        %end;
22720     +        %EM_REPORT(KEY=SIZE, VIEWTYPE=PIE, DESCRIPTION=segmentmanysize, X=SEGMENTVALUE, Y=COUNT, TIPTEXT=PERCENT,
22721     +                   REPORTID=SEGMENTVARIABLE, IDVALUE=SIZE, BLOCK=Plot, AUTODISPLAY=Y, LOCALIZE=Y);
22723     +    %end;
22725     +    %EM_REPORT(KEY=SIZE,      VIEWTYPE=DATA, DESCRIPTION=size,                BLOCK=Stats);
22726     +    %EM_REPORT(KEY=STATS,     VIEWTYPE=DATA, DESCRIPTION=profilevars,         BLOCK=Stats);
22727     +    %EM_REPORT(KEY=CLASSDIST, VIEWTYPE=DATA, DESCRIPTION=clusbarplot,         BLOCK=Stats);
22728     +    %EM_REPORT(KEY=INTDIST,   VIEWTYPE=DATA, DESCRIPTION=clushistplot,        BLOCK=Stats);
22730     +    proc datasets lib=&EM_LIB nolist;
22731     +       delete &EM_NODEID._SELVARS _SUMMARYVARS DATA_STAT &EM_NODEID._MACS(mt=catalog) &EM_NODEID._INTERVAL(mt=catalog);
22732     +    run;
22734     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof2_SIZE Prof2_STATS Prof2_FIT Prof2_WORTH Prof2_IMPORTANCE Prof2_SELVARS Prof2_CLASSDIST Prof2_INTDIST Prof2_MACS(mt=catalog);
MPRINT(TRAIN):   run;
 
NOTE: The file EMWS1.PROF2_SIZE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_STATS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_FIT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_WORTH (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_IMPORTANCE (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_SELVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_CLASSDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_INTDIST (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   proc sort data=EMWS1.Prof2_VariableSet;
MPRINT(TRAIN):   by Name;
MPRINT(TRAIN):   run;
 
NOTE: There were 21 observations read from the data set EMWS1.PROF2_VARIABLESET.
NOTE: The data set EMWS1.PROF2_VARIABLESET has 21 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof2_MACS.INTERVAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof2_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL="INTERVAL" and USE='Y') or (ROLE ='INPUT' and LEVEL="INTERVAL" and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;
 
NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_MACS.INTERVAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=15 Dec 2015 Tue 17:07:27 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:27 o'clock,
      Filename=F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\prof2_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 4 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 71.
NOTE: There were 13 observations read from the data set EMWS1.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and (LEVEL='INTERVAL') and (USE='Y')) or ((ROLE='INPUT') and (LEVEL='INTERVAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(MAKEVARMACROS):   filename X catalog "EMWS1.Prof2_MACS.NOMINAL_1.SOURCE";
MPRINT(MAKEVARMACROS):   data _null_;
MPRINT(MAKEVARMACROS):   length _STRING_ $80;
MPRINT(MAKEVARMACROS):   retain _STRING_ ;
MPRINT(MAKEVARMACROS):   file X;
MPRINT(MAKEVARMACROS):   set EMWS1.Prof2_VariableSet(firstobs=1 obs=10001) end=eof;
MPRINT(MAKEVARMACROS):   where (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
MPRINT(MAKEVARMACROS):   if _N_=1 then put '%macro _PROFVAR;';
MPRINT(MAKEVARMACROS):   if (length(_STRING_) + length(trim(NAME))+ 1 < 80) then do;
MPRINT(MAKEVARMACROS):   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   else do;
MPRINT(MAKEVARMACROS):   put _STRING_;
MPRINT(MAKEVARMACROS):   _string_ = TRIM(NAME);
MPRINT(MAKEVARMACROS):   if eof then do;
MPRINT(MAKEVARMACROS):   put _string_;
MPRINT(MAKEVARMACROS):   put '%mend _PROFVAR;';
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   end;
MPRINT(MAKEVARMACROS):   run;
 
NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_MACS.NOMINAL_1.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:27 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:27 o'clock,
      Filename=F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\prof2_macs.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 3 records were written to the file X.
      The minimum record length was 15.
      The maximum record length was 41.
NOTE: There were 3 observations read from the data set EMWS1.PROF2_VARIABLESET.
      WHERE ((ROLE='REJECTED') and LEVEL in ('BINARY', 'NOMINAL') and (USE='Y')) or ((ROLE='INPUT') and LEVEL in ('BINARY', 'NOMINAL') and USE in ('D', 'Y'));
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(MAKEVARMACROS):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(EM_PROFILE):  ;
MPRINT(EM_PROFILE):  ;
*------------------------------------------------------------*
* Filtering input variables
* SEGMENT= SOM_SEGMENT
*------------------------------------------------------------*
MPRINT(TREE_PROFILE):   proc freq data=EMWS1.SOM2_TRAIN noprint ;
MPRINT(TREE_PROFILE):   table SOM_SEGMENT / missing out=SOM_SEGMENT(keep=SOM_SEGMENT count percent) ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.17 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: The data set WORK.SOM_SEGMENT has 25 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=SOM_SEGMENT;
MPRINT(TREE_PROFILE):   by descending count ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 25 observations read from the data set WORK.SOM_SEGMENT.
NOTE: The data set WORK.SOM_SEGMENT has 25 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _segs;
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT";
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value";
MPRINT(TREE_PROFILE):   drop SOM_SEGMENT cum othercount otherpct numLevels;
MPRINT(TREE_PROFILE):   retain cum othercount otherpct numLevels 0;
MPRINT(TREE_PROFILE):   format Count 8.;
MPRINT(TREE_PROFILE):   set SOM_SEGMENT end=eof;
MPRINT(TREE_PROFILE):   SegmentValue= left(put(SOM_SEGMENT, best12.));
MPRINT(TREE_PROFILE):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   else do;
MPRINT(TREE_PROFILE):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! strip(SegmentValue));
MPRINT(TREE_PROFILE):   othercount = othercount + count;
MPRINT(TREE_PROFILE):   otherpct = otherpct + percent;
MPRINT(TREE_PROFILE):   if eof then do;
MPRINT(TREE_PROFILE):   SegmentValue = '_OTHER_';
MPRINT(TREE_PROFILE):   count = othercount;
MPRINT(TREE_PROFILE):   percent = otherpct;
MPRINT(TREE_PROFILE):   numLevels + 1;
MPRINT(TREE_PROFILE):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(TREE_PROFILE):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, best.))) ;
MPRINT(TREE_PROFILE):   output;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   cum = cum + percent;
MPRINT(TREE_PROFILE):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 25 observations read from the data set WORK.SOM_SEGMENT.
NOTE: The data set WORK._SEGS has 24 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 " " ;
MPRINT(TREE_PROFILE):   title10 "Frequencies: SOM_SEGMENT";
MPRINT(TREE_PROFILE):   proc print data=_segs noobs label ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 24 observations read from the data set WORK._SEGS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SIZE data=_segs force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._SEGS to EMWS1.PROF2_SIZE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 24 observations read from the data set WORK._SEGS.
NOTE: The data set EMWS1.PROF2_SIZE has 24 observations and 4 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 25 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441839 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 258 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.84 seconds
      cpu time            0.43 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.86 seconds
      cpu time            0.45 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 258 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 258 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "25";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 25 Count: 169";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: The data set EMWS1.PROF2_SELVARS has 4 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._SEGS (memtype=DATA).
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 5 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.10 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 258 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.33 seconds
      cpu time            0.32 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.35 seconds
      cpu time            0.35 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 258 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 258 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "5";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 5 Count: 165";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 4.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 6 observations read from the data set WORK._TEMPRULE.
NOTE: 6 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 10 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 11 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.41 seconds
      cpu time            0.40 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.42 seconds
      cpu time            0.40 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "11";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 11 Count: 144";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 5.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 20 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 4 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.37 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.39 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "4";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 4 Count: 125";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 6.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 24 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 16 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.36 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.37 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "16";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 16 Count: 121";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 7.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 9 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 9 observations read from the data set WORK._TEMPRULE.
NOTE: 9 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 33 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 3 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.34 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.37 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "3";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 3 Count: 120";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 8.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 3 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 3 observations read from the data set WORK._TEMPRULE.
NOTE: 3 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 36 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 6 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.42 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.44 seconds
      cpu time            0.43 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "6";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 6 Count: 120";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 9.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 5 observations read from the data set WORK._TEMPRULE.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 41 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 10 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.21 seconds
      cpu time            0.15 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.35 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.41 seconds
      cpu time            0.39 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "10";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 10 Count: 100";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 10.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 45 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 24 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.26 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.29 seconds
      cpu time            0.28 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "24";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 24 Count: 99";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 11.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 47 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 21 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.36 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.37 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "21";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 21 Count: 95";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 12.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 4 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 4 observations read from the data set WORK._TEMPRULE.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 51 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 15 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.24 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.30 seconds
      cpu time            0.26 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "15";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 15 Count: 90";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 13.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 52 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 14 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.35 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.41 seconds
      cpu time            0.37 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "14";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 14 Count: 81";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 14.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 54 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 19 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.34 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.35 seconds
      cpu time            0.34 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "19";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 19 Count: 81";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 15.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 56 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 18 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.43 seconds
      cpu time            0.40 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.45 seconds
      cpu time            0.43 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "18";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 18 Count: 77";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 16.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 2 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 2 observations read from the data set WORK._TEMPRULE.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 58 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 9 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.40 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.44 seconds
      cpu time            0.42 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "9";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold,
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 9 Count: 74";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 17.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 58 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 13 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.30 seconds
      cpu time            0.29 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.31 seconds
      cpu time            0.31 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "13";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold,
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 13 Count: 74";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 18.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 58 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 20 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.34 seconds
      cpu time            0.32 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "20";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 20 Count: 74";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 19.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 59 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 2 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.33 seconds
      cpu time            0.31 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "2";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 2 Count: 73";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 20.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 60 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 22 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.42 seconds
      cpu time            0.40 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.43 seconds
      cpu time            0.42 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "22";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 22 Count: 70";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 21.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 61 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 23 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.47 seconds
      cpu time            0.35 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.49 seconds
      cpu time            0.39 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "23";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold,
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 23 Count: 70";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 22.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 61 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 8 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.36 seconds
      cpu time            0.35 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.38 seconds
      cpu time            0.37 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "8";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold,
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 8 Count: 62";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 23.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 61 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 1 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 6 nodes and 5 leaves.
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 6 nodes and 5 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 258 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.35 seconds
      cpu time            0.32 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 258 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 258 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "1";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 1 Count: 57";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 24.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 62 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT = 12 then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.39 seconds
      cpu time            0.37 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.39 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "12";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
*------------------------------------------------------------*
* No input variable meet the minimum worth criterion of 0.01
* You may identify profile variables by lowering this threshold,
* or by increasing the maximum depth of the decision tree used.
*------------------------------------------------------------*
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: 12 Count: 50";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 25.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 0 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 0 observations read from the data set WORK._TEMPRULE.
NOTE: 0 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 62 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(TREE_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(TREE_PROFILE):  =acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence SOM_DIMENSION1 SOM_DIMENSION2 artist_name genre SOM_SEGMENT);
MPRINT(TREE_PROFILE):   if SOM_SEGMENT in( 7 17) then _seg= 1 ;
MPRINT(TREE_PROFILE):   else _seg= 0 ;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(_ARBOR):   proc arbor data=Prof2_TMP Criterion=GINI Leafsize=5 Mincatsize = 5 Maxbranch=5 Maxdepth=1 NORULELIMIT MAXRULES=10 MAXSURRS=0 Missing=USEINSEARCH Exhaustive=5000;
MPRINT(_ARBOR):   input
MPRINT(EM_INTERVAL_INPUT):   acousticness danceability duration energy instrumentalness key liveness loudness song_hotttnesss speechiness tempo time_signature valence
MPRINT(_ARBOR):   / level = interval;
MPRINT(_ARBOR):   input
MPRINT(EM_NOMINAL_INPUT):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name
MPRINT(_ARBOR):   / level = nominal;
MPRINT(_ARBOR):   target _SEG / level=binary;
MPRINT(_ARBOR):   Performance Disk NodeSize=10000;
MPRINT(_ARBOR):   Assess NoValidata measure=MISC;
NOTE: 1441429 kilobytes of physical memory.
NOTE: Will use 2276 out of 2276 training cases.
NOTE: Using memory pool with 89817088 bytes.
NOTE: Passed training data 2 times.
NOTE: Training used 979944 bytes of work memory.
NOTE: The subtree sequence contains 2 subtrees. The largest has 3 nodes and 2 leaves.
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   SUBTREE BEST;
NOTE: Using subtree with 1 nodes and 1 leaves.
MPRINT(_ARBOR):   save RULES=_RULE;
NOTE: The data set WORK._RULE has 257 observations and 6 variables.
MPRINT(_ARBOR):   ;
MPRINT(_ARBOR):   run;
 
MPRINT(_ARBOR):   quit;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.38 seconds
      cpu time            0.37 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK.PROF2_TMP.
NOTE: PROCEDURE ARBOR used (Total process time):
      real time           0.40 seconds
      cpu time            0.39 seconds
 
 
MPRINT(_ARBOR):   proc append base=_TEMPRULE data=_RULE force;
MPRINT(_ARBOR):   run;
 
NOTE: Appending WORK._RULE to WORK._TEMPRULE.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 257 observations read from the data set WORK._RULE.
NOTE: The data set WORK._TEMPRULE has 257 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(_ARBOR):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(_ARBOR):   delete _RULE;
MPRINT(_ARBOR):   run;
 
NOTE: Deleting WORK._RULE (memtype=DATA).
MPRINT(_ARBOR):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):  ;
MPRINT(TREE_PROFILE):   data _TEMPRULE(rename=(Name=Variable numeric_value=Worth));
MPRINT(TREE_PROFILE):   length Name $32;
MPRINT(TREE_PROFILE):   label Name = "Variable";
MPRINT(TREE_PROFILE):   retain Name;
MPRINT(TREE_PROFILE):   set _temprule;
MPRINT(TREE_PROFILE):   where stat in('VARIABLE','WORTH');
MPRINT(TREE_PROFILE):   if stat = 'VARIABLE' then Name = character_value;
MPRINT(TREE_PROFILE):   else output;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMPRULE.
      WHERE stat in ('VARIABLE', 'WORTH');
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   proc sort data=_TEMPRULE;
MPRINT(TREE_PROFILE):   by descending Worth;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE(keep=SegmentVariable SegmentValue Variable Rank Worth);
MPRINT(TREE_PROFILE):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TREE_PROFILE):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TREE_PROFILE):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "_OTHER_";
MPRINT(TREE_PROFILE):   set _TEMPRULE(obs=10);
MPRINT(TREE_PROFILE):   Rank = _N_;
MPRINT(TREE_PROFILE):   if _N_=1 and worth ne . and (worth < 0.01) then do;
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   put "* No input variable meet the minimum worth criterion of 0.01";
MPRINT(TREE_PROFILE):   put "* You may identify profile variables by lowering this threshold, ";
MPRINT(TREE_PROFILE):   put "* or by increasing the maximum depth of the decision tree used.";
MPRINT(TREE_PROFILE):   put "*------------------------------------------------------------*";
MPRINT(TREE_PROFILE):   end;
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
NOTE: The data set WORK._TEMPRULE has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TREE_PROFILE):   title9 "Variable: SOM_SEGMENT Segment: _OTHER_ Count: 85";
MPRINT(TREE_PROFILE):   title10 "Decision Tree Importance Profiles";
MPRINT(TREE_PROFILE):   proc print data=_TEMPRULE noobs label ;
MPRINT(TREE_PROFILE):   var Variable Worth Rank;
MPRINT(TREE_PROFILE):   where worth ne .;
MPRINT(TREE_PROFILE):   run ;
 
NOTE: There were 10 observations read from the data set WORK._TEMPRULE.
      WHERE worth not = .;
NOTE: The PROCEDURE PRINT printed page 26.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   data _TEMPRULE;
MPRINT(TREE_PROFILE):   set _TEMPRULE;
MPRINT(TREE_PROFILE):   where worth eq . or (worth >= 0.01);
MPRINT(TREE_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
      WHERE (worth=.) or (worth>=0.01);
NOTE: The data set WORK._TEMPRULE has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TREE_PROFILE):   title9;
MPRINT(TREE_PROFILE):   title10;
MPRINT(TREE_PROFILE):   proc append base=EMWS1.Prof2_SELVARS data=_TEMPRULE force;
MPRINT(TREE_PROFILE):   run;
 
NOTE: Appending WORK._TEMPRULE to EMWS1.PROF2_SELVARS.
NOTE: There were 1 observations read from the data set WORK._TEMPRULE.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_SELVARS has 63 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TREE_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(TREE_PROFILE):   delete _SEGS Prof2_TMP Prof2_VALIDTMP _STAT _TEMPRULE ;
MPRINT(TREE_PROFILE):   run;
 
NOTE: The file WORK._SEGS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_VALIDTMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._STAT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._TEMPRULE (memtype=DATA).
MPRINT(TREE_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_PROFILE):   proc datasets lib=EMWS1 nolist;
MPRINT(EM_PROFILE):   delete Prof2_MACS(mt=catalog);
MPRINT(EM_PROFILE):   run;
 
NOTE: Deleting EMWS1.PROF2_MACS (memtype=CATALOG).
MPRINT(TRAIN):  ;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   proc sort data=EMWS1.Prof2_SELVARS;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;
 
NOTE: There were 63 observations read from the data set EMWS1.PROF2_SELVARS.
NOTE: The data set EMWS1.PROF2_SELVARS has 63 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   data EMWS1.Prof2_SELVARS;
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   merge EMWS1.Prof2_SELVARS(in=a) EMWS1.Prof2_VariableSet(keep=NAME LEVEL LABEL rename=(NAME=Variable));
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   if LABEL eq '' then LABEL=VARIABLE;
MPRINT(TRAIN):   if a then do;
MPRINT(TRAIN):   if LEVEL = 'INTERVAL' then Type = 'I';
MPRINT(TRAIN):   else Type = 'C';
MPRINT(TRAIN):   output;
MPRINT(TRAIN):   end;
MPRINT(TRAIN):   drop LEVEL;
MPRINT(TRAIN):   run;
 
WARNING: Multiple lengths were specified for the BY variable Variable by input data sets. This may cause unexpected results.
NOTE: There were 63 observations read from the data set EMWS1.PROF2_SELVARS.
NOTE: There were 21 observations read from the data set EMWS1.PROF2_VARIABLESET.
NOTE: The data set EMWS1.PROF2_SELVARS has 63 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   proc sort data=EMWS1.Prof2_SELVARS out=_SummaryVars nodupkey;
MPRINT(TRAIN):   by Variable;
MPRINT(TRAIN):   run;
 
NOTE: There were 63 observations read from the data set EMWS1.PROF2_SELVARS.
NOTE: 53 observations with duplicate key values were deleted.
NOTE: The data set WORK._SUMMARYVARS has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   data EMWS1.Prof2_STATS(keep=Type SegmentVariable SegmentValue Variable Label Rank Worth);
MPRINT(TRAIN):   length Type $1;
MPRINT(TRAIN):   label Type = "Type";
MPRINT(TRAIN):   set _SummaryVars;
MPRINT(TRAIN):   SegmentVariable= "_OVERALL_";
MPRINT(TRAIN):   SegmentValue= "EMWS1.SOM2_TRAIN" ;
MPRINT(TRAIN):   rank = .;
MPRINT(TRAIN):   Worth=.;
MPRINT(TRAIN):   if Label eq '' then Label=Variable;
MPRINT(TRAIN):   run;
 
NOTE: There were 10 observations read from the data set WORK._SUMMARYVARS.
NOTE: The data set EMWS1.PROF2_STATS has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Profile Entire Data
*------------------------------------------------------------*
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   set EMWS1.Prof2_STATS;
MPRINT(TRAIN):   if Type = 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(TRAIN):   run ;
 
NOTE: There were 10 observations read from the data set EMWS1.PROF2_STATS.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:50 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22738     +%macro _vars;
22739     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=EMWS1.SOM2_TRAIN nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 2276   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.17 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: The data set WORK._TEMPCLASS has 691 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.24 seconds
      cpu time            0.20 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 691 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 691 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 691 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 691 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 691 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _CLASS;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.SOM2_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(TRAIN):   set _CLASS;
MPRINT(TRAIN):   run;
 
NOTE: There were 691 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 691 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(TRAIN):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 691 observations read from the data set WORK._CLASS.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 691 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   proc sort data=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   data EMWS1.Prof2_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof2_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.PROF2_STATS.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF2_STATS has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:50 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22740     +%macro _vars;
22741     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.SOM2_TRAIN(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   acousticness danceability energy instrumentalness loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2276   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: The data set WORK._STAT has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 7 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* computingmidpoints_note
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename fref catalog 'work.em.profileformat.source';
MPRINT(VAR_PROFILE):   proc dmdb data=EMWS1.SOM2_TRAIN(obs=1000000) classout=_CLASSOUT maxlevel=9;
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   acousticness danceability energy instrumentalness loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2276   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: The data set WORK._CLASSOUT has 63 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   proc freq data=_CLASSOUT ORDER=DATA noprint;
MPRINT(VAR_PROFILE):   table NAME / OUT = _COUNT(where=(COUNT<9));
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 63 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._COUNT has 0 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_COUNT(keep=NAME COUNT rename=(COUNT=_NUMCLASSBINS_));
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Input data set is empty.
NOTE: The data set WORK._COUNT has 0 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_CLASSOUT;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 63 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._CLASSOUT has 63 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_CLASSOUT out=_DISCRETEMID(DROP=_NAME_ RENAME=(NAME=VARIABLE)) prefix=_MIDPOINT;
MPRINT(VAR_PROFILE):   var NRAW;
MPRINT(VAR_PROFILE):   by NAME;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 63 observations read from the data set WORK._CLASSOUT.
NOTE: The data set WORK._DISCRETEMID has 7 observations and 10 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc delete data=WORK._CLASSOUT;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._CLASSOUT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   dsid = open('_DISCRETEMID');
MPRINT(VAR_PROFILE):   if dsid then do;
MPRINT(VAR_PROFILE):   call symput('NUMCLASSBARS', left(trim(put(attrn(dsid, 'NVARS')-1, best12.))));
MPRINT(VAR_PROFILE):   dsid = close(dsid);
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data _DISCRETEMID;
MPRINT(VAR_PROFILE):   merge _DISCRETEMID _COUNT(in=_b rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   keep VARIABLE _MIDPOINT1--_MIDPOINT9 _NUMCLASSBINS_;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then output;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 7 observations read from the data set WORK._DISCRETEMID.
NOTE: There were 0 observations read from the data set WORK._COUNT.
NOTE: The data set WORK._DISCRETEMID has 0 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _EMVARDIST / view=_EMVARDIST;
MPRINT(VAR_PROFILE):   set EMWS1.SOM2_TRAIN(keep
MPRINT(VAR_PROFILE):  = acousticness danceability energy instrumentalness loudness tempo valence obs=1000000);
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._EMVARDIST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(VAR_PROFILE):   proc stdize data=_EMVARDIST outstat=_PCTLSTAT out=_null_ pctlpts=(0 5 25 50 75 95 100);
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   acousticness danceability energy instrumentalness loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK._EMVARDIST.VIEW used (Total process time):
      real time           0.43 seconds
      cpu time            0.39 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK._EMVARDIST.
NOTE: The data set WORK._PCTLSTAT has 15 observations and 8 variables.
NOTE: PROCEDURE STDIZE used (Total process time):
      real time           0.45 seconds
      cpu time            0.40 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=WORK NOLIST;
MPRINT(VAR_PROFILE):   delete _EMVARDIST / mt=view;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Deleting WORK._EMVARDIST (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc transpose data=_PCTLSTAT out=DATA_STAT(rename=(_NAME_=VARIABLE COL1=MIN COL2=P5 COL3=P95 COL4=MAX));
MPRINT(VAR_PROFILE):   where _type_ in('P0', 'P5', 'P95', 'P100');
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._PCTLSTAT.
      WHERE _type_ in ('P0', 'P100', 'P5', 'P95');
NOTE: The data set WORK.DATA_STAT has 7 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=DATA_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 7 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 7 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   set DATA_STAT;
MPRINT(VAR_PROFILE):   length Format $12;
MPRINT(VAR_PROFILE):   array _midpoint{20};
MPRINT(VAR_PROFILE):   array _bounds{20};
MPRINT(VAR_PROFILE):   if (max - min)>1e-10 then do;
MPRINT(VAR_PROFILE):   step = abs(P95-P5)/8;
MPRINT(VAR_PROFILE):   lstep = abs(p5- min)/5;
MPRINT(VAR_PROFILE):   ustep = abs(max-p95)/5;
MPRINT(VAR_PROFILE):   ;
MPRINT(VAR_PROFILE):   if lstep<=step and ustep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-MAX)/8;
MPRINT(VAR_PROFILE):   START=MIN;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if lstep<=step then do;
MPRINT(VAR_PROFILE):   step = abs(MIN-P95)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _bounds(i) = MIN + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = MIN+ (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8 + i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   _bounds(i) = P5 - (5-i)*lstep;
MPRINT(VAR_PROFILE):   if abs(_bounds{i})< 1e-10 then _bounds(i)= 0;
MPRINT(VAR_PROFILE):   _midpoint(i) = P5 - (5 - i + 0.5)*lstep - abs(lstep-step)/2;
MPRINT(VAR_PROFILE):   if abs(_midpoint{i})< 1e-10 then _midpoint(i)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   if ustep<= step then do;
MPRINT(VAR_PROFILE):   step = abs(P5-MAX)/8;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   numbars = i+5;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P5 + i*step;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P5 + (i-0.5)*step;
MPRINT(VAR_PROFILE):   if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   do i=1 to 5;
MPRINT(VAR_PROFILE):   numbars = 8+5+i;
MPRINT(VAR_PROFILE):   _bounds(numbars) = P95 + i*ustep;
MPRINT(VAR_PROFILE):   if abs(_bounds{numbars})< 1e-10 then _bounds(numbars)= 0;
MPRINT(VAR_PROFILE):   _midpoint(numbars) = P95 + (i-0.5)*ustep + abs(ustep-step)/2;
MPRINT(VAR_PROFILE):  if abs(_midpoint{numbars})< 1e-10 then _midpoint(numbars)= 0;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _bounds(1) = MIN;
MPRINT(VAR_PROFILE):   _midpoint(1) = MIN;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   Format = 'F'!!trim(left(put(_n_,6.)))!!'_';
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 7 observations read from the data set WORK.DATA_STAT.
NOTE: The data set WORK.DATA_STAT has 7 observations and 52 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data DATA_STAT;
MPRINT(VAR_PROFILE):   merge DATA_STAT _DISCRETEMID(in = _b);
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   if _b then _DISCRETE=1;
MPRINT(VAR_PROFILE):   else _DISCRETE=0;
MPRINT(VAR_PROFILE):   run;
 
WARNING: Multiple lengths were specified for the BY variable VARIABLE by input data sets. This may cause unexpected results.
NOTE: There were 7 observations read from the data set WORK.DATA_STAT.
NOTE: There were 0 observations read from the data set WORK._DISCRETEMID.
NOTE: The data set WORK.DATA_STAT has 7 observations and 54 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file fref;
MPRINT(VAR_PROFILE):   set DATA_STAT end=eof;
MPRINT(VAR_PROFILE):   array _bounds{18};
MPRINT(VAR_PROFILE):   array _midpoint{18};
MPRINT(VAR_PROFILE):   if _n_=1 then put 'proc format;';
MPRINT(VAR_PROFILE):   put 'value ' Format;
MPRINT(VAR_PROFILE):   if _DISCRETE then do;
MPRINT(VAR_PROFILE):   do i=1 to 8;
MPRINT(VAR_PROFILE):   _MID = _midpoint{i};
MPRINT(VAR_PROFILE):   if _MID ne . and i<= _NUMCLASSBINS_ then put _MID '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   if min eq max then do;
MPRINT(VAR_PROFILE):   put 'low - high ="' MIN '";';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   else do;
MPRINT(VAR_PROFILE):   _LB = MIN;
MPRINT(VAR_PROFILE):   _MID = _midpoint{1};
MPRINT(VAR_PROFILE):   _UB = _bounds{1};
MPRINT(VAR_PROFILE):   put 'LOW -' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   do i=1 to 18-1;
MPRINT(VAR_PROFILE):   _LB = _bounds{i};
MPRINT(VAR_PROFILE):   j=i+1;
MPRINT(VAR_PROFILE):   _MID = _midpoint{j};
MPRINT(VAR_PROFILE):   _UB = _bounds{j};
MPRINT(VAR_PROFILE):   if (_UB ne .) and (_LB ne _UB) then do;
MPRINT(VAR_PROFILE):   if _UB>=MAX then put _LB '-HIGH="' _MID '"';
MPRINT(VAR_PROFILE):   else put _LB '-' _UB '="' _MID '"';
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   end;
MPRINT(VAR_PROFILE):   put ';';
MPRINT(VAR_PROFILE):   if eof then put 'run;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file FREF is:
      Catalog Name=WORK.EM.PROFILEFORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=15 Dec 2015 Tue 17:07:52 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:52 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\em.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 77 records were written to the file FREF.
      The minimum record length was 1.
      The maximum record length was 40.
NOTE: There were 7 observations read from the data set WORK.DATA_STAT.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
 
 
NOTE: %INCLUDE (level 1) file FREF is file WORK.EM.PROFILEFORMAT.SOURCE.
22742     +proc format;
MPRINT(VAR_PROFILE):   proc format;
22743     +value F1_
22744     +LOW -0.124475375 ="0.0622381875 "
22745     +0.124475375 -0.24894975 ="0.1867125625 "
22746     +0.24894975 -0.373424125 ="0.3111869375 "
22747     +0.373424125 -0.4978985 ="0.4356613125 "
22748     +0.4978985 -0.622372875 ="0.5601356875 "
22749     +0.622372875 -0.74684725 ="0.6846100625 "
22750     +0.74684725 -0.871321625 ="0.8090844375 "
22751     +0.871321625 -HIGH="0.9335588125 "
22752     +;
MPRINT(VAR_PROFILE):   value F1_ LOW -0.124475375 ="0.0622381875 " 0.124475375 -0.24894975 ="0.1867125625 " 0.24894975 -0.373424125 ="0.3111869375 " 0.373424125 -0.4978985 ="0.4356613125 " 0.4978985 -0.622372875 ="0.5601356875 " 0.622372875 -0.74684725
="0.6846100625 " 0.74684725 -0.871321625 ="0.8090844375 " 0.871321625 -HIGH="0.9335588125 " ;
NOTE: Format F1_ has been output.
22753     +value F2_
22754     +LOW -0.170775125 ="0.1159200625 "
22755     +0.170775125 -0.28048525 ="0.2256301875 "
22756     +0.28048525 -0.390195375 ="0.3353403125 "
22757     +0.390195375 -0.4999055 ="0.4450504375 "
22758     +0.4999055 -0.609615625 ="0.5547605625 "
22759     +0.609615625 -0.71932575 ="0.6644706875 "
22760     +0.71932575 -0.829035875 ="0.7741808125 "
22761     +0.829035875 -HIGH="0.8838909375 "
22762     +;
MPRINT(VAR_PROFILE):   value F2_ LOW -0.170775125 ="0.1159200625 " 0.170775125 -0.28048525 ="0.2256301875 " 0.28048525 -0.390195375 ="0.3353403125 " 0.390195375 -0.4999055 ="0.4450504375 " 0.4999055 -0.609615625 ="0.5547605625 " 0.609615625 -0.71932575
="0.6644706875 " 0.71932575 -0.829035875 ="0.7741808125 " 0.829035875 -HIGH="0.8838909375 " ;
NOTE: Format F2_ has been output.
22763     +value F3_
22764     +LOW -0.126069375 ="0.0638071875 "
22765     +0.126069375 -0.25059375 ="0.1883315625 "
22766     +0.25059375 -0.375118125 ="0.3128559375 "
22767     +0.375118125 -0.4996425 ="0.4373803125 "
22768     +0.4996425 -0.624166875 ="0.5619046875 "
22769     +0.624166875 -0.74869125 ="0.6864290625 "
22770     +0.74869125 -0.873215625 ="0.8109534375 "
22771     +0.873215625 -HIGH="0.9354778125 "
22772     +;
MPRINT(VAR_PROFILE):   value F3_ LOW -0.126069375 ="0.0638071875 " 0.126069375 -0.25059375 ="0.1883315625 " 0.25059375 -0.375118125 ="0.3128559375 " 0.375118125 -0.4996425 ="0.4373803125 " 0.4996425 -0.624166875 ="0.5619046875 " 0.624166875 -0.74869125
="0.6864290625 " 0.74869125 -0.873215625 ="0.8109534375 " 0.873215625 -HIGH="0.9354778125 " ;
NOTE: Format F3_ has been output.
22773     +value F4_
22774     +LOW -0.122233625 ="0.0611168125 "
22775     +0.122233625 -0.24446725 ="0.1833504375 "
22776     +0.24446725 -0.366700875 ="0.3055840625 "
22777     +0.366700875 -0.4889345 ="0.4278176875 "
22778     +0.4889345 -0.611168125 ="0.5500513125 "
22779     +0.611168125 -0.73340175 ="0.6722849375 "
22780     +0.73340175 -0.855635375 ="0.7945185625 "
22781     +0.855635375 -HIGH="0.9167521875 "
22782     +;
MPRINT(VAR_PROFILE):   value F4_ LOW -0.122233625 ="0.0611168125 " 0.122233625 -0.24446725 ="0.1833504375 " 0.24446725 -0.366700875 ="0.3055840625 " 0.366700875 -0.4889345 ="0.4278176875 " 0.4889345 -0.611168125 ="0.5500513125 " 0.611168125 -0.73340175
="0.6722849375 " 0.73340175 -0.855635375 ="0.7945185625 " 0.855635375 -HIGH="0.9167521875 " ;
NOTE: Format F4_ has been output.
22783     +value F5_
22784     +LOW --37.8764 ="-39.68275 "
22785     +-37.8764 --34.7168 ="-36.52315 "
22786     +-34.7168 --31.5572 ="-33.36355 "
22787     +-31.5572 --28.3976 ="-30.20395 "
22788     +-28.3976 --25.238 ="-27.04435 "
22789     +-25.238 --22.282 ="-23.76 "
22790     +-22.282 --19.326 ="-20.804 "
22791     +-19.326 --16.37 ="-17.848 "
22792     +-16.37 --13.414 ="-14.892 "
22793     +-13.414 --10.458 ="-11.936 "
22794     +-10.458 --7.502 ="-8.98 "
22795     +-7.502 --4.546 ="-6.024 "
22796     +-4.546 -HIGH="-3.068 "
22797     +;
MPRINT(VAR_PROFILE):   value F5_ LOW --37.8764 ="-39.68275 " -37.8764 --34.7168 ="-36.52315 " -34.7168 --31.5572 ="-33.36355 " -31.5572 --28.3976 ="-30.20395 " -28.3976 --25.238 ="-27.04435 " -25.238 --22.282 ="-23.76 " -22.282 --19.326 ="-20.804 "
-19.326 --16.37 ="-17.848 " -16.37 --13.414 ="-14.892 " -13.414 --10.458 ="-11.936 " -10.458 --7.502 ="-8.98 " -7.502 --4.546 ="-6.024 " -4.546 -HIGH="-3.068 " ;
NOTE: Format F5_ has been output.
22798     +value F6_
22799     +LOW -65.556375 ="54.7921875 "
22800     +65.556375 -87.08475 ="76.3205625 "
22801     +87.08475 -108.613125 ="97.8489375 "
22802     +108.613125 -130.1415 ="119.3773125 "
22803     +130.1415 -151.669875 ="140.9056875 "
22804     +151.669875 -173.19825 ="162.4340625 "
22805     +173.19825 -194.726625 ="183.9624375 "
22806     +194.726625 -HIGH="205.4908125 "
22807     +;
MPRINT(VAR_PROFILE):   value F6_ LOW -65.556375 ="54.7921875 " 65.556375 -87.08475 ="76.3205625 " 87.08475 -108.613125 ="97.8489375 " 108.613125 -130.1415 ="119.3773125 " 130.1415 -151.669875 ="140.9056875 " 151.669875 -173.19825 ="162.4340625 " 173.19825
-194.726625 ="183.9624375 " 194.726625 -HIGH="205.4908125 " ;
NOTE: Format F6_ has been output.
22808     +value F7_
22809     +LOW -0.145493125 ="0.0856415625 "
22810     +0.145493125 -0.26519625 ="0.2053446875 "
22811     +0.26519625 -0.384899375 ="0.3250478125 "
22812     +0.384899375 -0.5046025 ="0.4447509375 "
22813     +0.5046025 -0.624305625 ="0.5644540625 "
22814     +0.624305625 -0.74400875 ="0.6841571875 "
22815     +0.74400875 -0.863711875 ="0.8038603125 "
22816     +0.863711875 -HIGH="0.9235634375 "
22817     +;
MPRINT(VAR_PROFILE):   value F7_ LOW -0.145493125 ="0.0856415625 " 0.145493125 -0.26519625 ="0.2053446875 " 0.26519625 -0.384899375 ="0.3250478125 " 0.384899375 -0.5046025 ="0.4447509375 " 0.5046025 -0.624305625 ="0.5644540625 " 0.624305625 -0.74400875
="0.6841571875 " 0.74400875 -0.863711875 ="0.8038603125 " 0.863711875 -HIGH="0.9235634375 " ;
NOTE: Format F7_ has been output.
MPRINT(VAR_PROFILE):   run;
22818     +run;
 
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename fref;
NOTE: Fileref FREF has been deassigned.
MPRINT(VAR_PROFILE):   data _binneddata / view=_binneddata;
MPRINT(VAR_PROFILE):   set EMWS1.SOM2_TRAIN(obs=1000000);
MPRINT(VAR_PROFILE):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
MPRINT(VAR_PROFILE):   run;
 
NOTE: DATA STEP view saved on file WORK._BINNEDDATA.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=_binneddata(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   acousticness danceability energy instrumentalness loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 2276   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK._BINNEDDATA.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: There were 2276 observations read from the data set EMWS1.SOM2_TRAIN.
NOTE: There were 2276 observations read from the data set WORK._BINNEDDATA.
NOTE: The data set WORK._TEMPTAB has 61 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 61 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 61 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
NOTE: Deleting WORK._BINNEDDATA (memtype=VIEW).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data _INTERVAL;
MPRINT(TRAIN):   length SegmentVariable $32 SegmentValue $200;
MPRINT(TRAIN):   retain SegmentVariable "_OVERALL_" SegmentValue "EMWS1.SOM2_TRAIN";
MPRINT(TRAIN):   label variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(TRAIN):   set _INTERVAL;
MPRINT(TRAIN):   run;
 
NOTE: There were 61 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 61 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(TRAIN):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 61 observations read from the data set WORK._INTERVAL.
NOTE: The data set EMWS1.PROF2_INTDIST has 61 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS) OUT=_STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 7 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 7 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   data EMWS1.Prof2_STATS;
MPRINT(TRAIN):   merge EMWS1.Prof2_STATS _STAT;
MPRINT(TRAIN):   by VARIABLE;
MPRINT(TRAIN):   run;
 
NOTE: There were 10 observations read from the data set EMWS1.PROF2_STATS.
NOTE: There were 7 observations read from the data set WORK._STAT.
NOTE: The data set EMWS1.PROF2_STATS has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(TRAIN):   filename X catalog "EMWS1.Prof2_INTERVAL.FORMAT.source";
MPRINT(TRAIN):   data _null_;
MPRINT(TRAIN):   file X;
MPRINT(TRAIN):   put 'format' ;
MPRINT(TRAIN):   put "acousticness F1_.";
MPRINT(TRAIN):   put "danceability F2_.";
MPRINT(TRAIN):   put "energy F3_.";
MPRINT(TRAIN):   put "instrumentalness F4_.";
MPRINT(TRAIN):   put "loudness F5_.";
MPRINT(TRAIN):   put "tempo F6_.";
MPRINT(TRAIN):   put "valence F7_.";
MPRINT(TRAIN):   put ';';
MPRINT(TRAIN):   run;
 
NOTE: The file X is:
      Catalog Name=EMWS1.PROF2_INTERVAL.FORMAT.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=4,
      Created=15 Dec 2015 Tue 17:07:52 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:52 o'clock,
      Filename=F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\prof2_interval.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 9 records were written to the file X.
      The minimum record length was 1.
      The maximum record length was 21.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Summarizing variables
* SEGMENT= SOM_SEGMENT
*------------------------------------------------------------*
MPRINT(SEGMENTSUMMARY):   data _null_;
MPRINT(SEGMENTSUMMARY):   retain cum othercount otherpct numLevels 0;
MPRINT(SEGMENTSUMMARY):   format Count 8.;
MPRINT(SEGMENTSUMMARY):   set SOM_SEGMENT end=eof;
MPRINT(SEGMENTSUMMARY):   SegmentValue= strip(put(SOM_SEGMENT, best12.));
MPRINT(SEGMENTSUMMARY):   if (cum < 95) or (trim(symget('OTHERWHERE')) eq ' ' and eof) then do;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!!strip(put(_N_,BEST.)), strip(tranwrd(SegmentValue, '"','""'))) ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !!strip(put(_N_,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   else do;
MPRINT(SEGMENTSUMMARY):   call symput('OTHERWHERE' ,symget('OTHERWHERE' ) !! ' ' !! strip(SegmentValue));
MPRINT(SEGMENTSUMMARY):   othercount = othercount + count;
MPRINT(SEGMENTSUMMARY):   otherpct = otherpct + percent;
MPRINT(SEGMENTSUMMARY):   if eof then do;
MPRINT(SEGMENTSUMMARY):   SegmentValue = '_OTHER_';
MPRINT(SEGMENTSUMMARY):   count = othercount;
MPRINT(SEGMENTSUMMARY):   percent = otherpct;
MPRINT(SEGMENTSUMMARY):   numLevels + 1;
MPRINT(SEGMENTSUMMARY):   call symput('SEGMENTS'!! strip(put(numLevels,BEST.)), '_OTHER_') ;
MPRINT(SEGMENTSUMMARY):   call symput('COUNTS' !! strip(put(numLevels,BEST.)), strip(put(count, best.))) ;
MPRINT(SEGMENTSUMMARY):   output;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   end;
MPRINT(SEGMENTSUMMARY):   cum = cum + percent;
MPRINT(SEGMENTSUMMARY):   if eof then call symput('numLevels', strip(put(numLevels,BEST.))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 25 observations read from the data set WORK.SOM_SEGMENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="25";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 4 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='25');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 25;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22819     +format
22820     +acousticness F1_.
22821     +danceability F2_.
22822     +energy F3_.
22823     +instrumentalness F4_.
22824     +loudness F5_.
22825     +tempo F6_.
22826     +valence F7_.
22827     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:51 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22828     +%macro _vars;
22829     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 169   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.14 seconds
 
NOTE: There were 169 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=25;
NOTE: There were 169 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 141 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 141 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 141 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 141 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 141 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 141 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "25";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 141 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 141 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 141 observations read from the data set WORK._CLASS.
NOTE: 141 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 832 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:53 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22830     +%macro _vars;
22831     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 169   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.10 seconds
 
NOTE: There were 169 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=25;
NOTE: There were 169 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 169   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
NOTE: There were 169 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=25;
NOTE: There were 169 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "25";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 4 observations read from the data set WORK._INTERVAL.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 65 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 14 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="5";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 6 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='5');
NOTE: The data set WORK._TEMPSTAT has 6 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 5;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22832     +format
22833     +acousticness F1_.
22834     +danceability F2_.
22835     +energy F3_.
22836     +instrumentalness F4_.
22837     +loudness F5_.
22838     +tempo F6_.
22839     +valence F7_.
22840     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:53 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22841     +%macro _vars;
22842     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 165   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.18 seconds
 
NOTE: There were 165 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=5;
NOTE: There were 165 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 124 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.25 seconds
      cpu time            0.21 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 124 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 124 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 124 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 124 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 124 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "5";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 124 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 124 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 124 observations read from the data set WORK._CLASS.
NOTE: 124 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 956 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:54 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22843     +%macro _vars;
22844     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   danceability tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 165   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: There were 165 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=5;
NOTE: There were 165 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   danceability tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 165   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.09 seconds
 
NOTE: There were 165 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=5;
NOTE: There were 165 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 14 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.10 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "5";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 14 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 14 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 14 observations read from the data set WORK._INTERVAL.
NOTE: 14 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 79 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 3 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 6 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 6 observations read from the data set WORK._TEMPSTAT.
NOTE: 6 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 20 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="11";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 10 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='11');
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 11;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22845     +format
22846     +acousticness F1_.
22847     +danceability F2_.
22848     +energy F3_.
22849     +instrumentalness F4_.
22850     +loudness F5_.
22851     +tempo F6_.
22852     +valence F7_.
22853     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:54 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22854     +%macro _vars;
22855     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 144   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: There were 144 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=11;
NOTE: There were 144 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 96 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 96 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 96 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 96 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 96 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 96 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "11";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 96 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 96 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 96 observations read from the data set WORK._CLASS.
NOTE: 96 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1052 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:55 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22856     +%macro _vars;
22857     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   acousticness danceability energy instrumentalness loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 144   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
NOTE: There were 144 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=11;
NOTE: There were 144 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 7 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.23 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 7 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 7 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   acousticness danceability energy instrumentalness loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 144   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
NOTE: There were 144 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=11;
NOTE: There were 144 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 45 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.22 seconds
      cpu time            0.20 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 45 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 45 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "11";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 45 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 45 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 45 observations read from the data set WORK._INTERVAL.
NOTE: 45 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 124 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 7 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 7 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 7 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 10 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 10 observations read from the data set WORK._TEMPSTAT.
NOTE: 10 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 30 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="4";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 4 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='4');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 4;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22858     +format
22859     +acousticness F1_.
22860     +danceability F2_.
22861     +energy F3_.
22862     +instrumentalness F4_.
22863     +loudness F5_.
22864     +tempo F6_.
22865     +valence F7_.
22866     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:55 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22867     +%macro _vars;
22868     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 125   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.12 seconds
 
NOTE: There were 125 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=4;
NOTE: There were 125 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1054 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:56 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22869     +%macro _vars;
22870     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 125   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
NOTE: There were 125 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=4;
NOTE: There were 125 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 125   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: There were 125 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=4;
NOTE: There were 125 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 8 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 8 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "4";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 8 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 8 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 8 observations read from the data set WORK._INTERVAL.
NOTE: 8 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 132 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 34 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="16";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 9 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='16');
NOTE: The data set WORK._TEMPSTAT has 9 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 16;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22871     +format
22872     +acousticness F1_.
22873     +danceability F2_.
22874     +energy F3_.
22875     +instrumentalness F4_.
22876     +loudness F5_.
22877     +tempo F6_.
22878     +valence F7_.
22879     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
The SAS System
 
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:57 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22880     +%macro _vars;
22881     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 121   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 121 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=16;
NOTE: There were 121 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 89 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 89 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 89 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 89 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 89 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 89 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "16";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 89 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 89 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 89 observations read from the data set WORK._CLASS.
NOTE: 89 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1143 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:57 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22882     +%macro _vars;
22883     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   acousticness danceability energy loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 121   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: There were 121 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=16;
NOTE: There were 121 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 6 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.16 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 6 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 6 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   acousticness danceability energy loudness tempo valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 121   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
NOTE: There were 121 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=16;
NOTE: There were 121 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 37 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.10 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 37 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "16";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 37 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 37 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 37 observations read from the data set WORK._INTERVAL.
NOTE: 37 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 169 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 6 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 6 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 6 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 9 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 9 observations read from the data set WORK._TEMPSTAT.
NOTE: 9 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 43 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="3";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 3 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='3');
NOTE: The data set WORK._TEMPSTAT has 3 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 3;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22884     +format
22885     +acousticness F1_.
22886     +danceability F2_.
22887     +energy F3_.
22888     +instrumentalness F4_.
22889     +loudness F5_.
22890     +tempo F6_.
22891     +valence F7_.
22892     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:58 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22893     +%macro _vars;
22894     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 120   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 120 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=3;
NOTE: There were 120 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1145 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:58 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22895     +%macro _vars;
22896     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 120   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 120 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=3;
NOTE: There were 120 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.16 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 120   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: There were 120 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=3;
NOTE: There were 120 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "3";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 3 observations read from the data set WORK._INTERVAL.
NOTE: 3 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 172 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 3 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 3 observations read from the data set WORK._TEMPSTAT.
NOTE: 3 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 46 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="6";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 5 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='6');
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 6;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22897     +format
22898     +acousticness F1_.
22899     +danceability F2_.
22900     +energy F3_.
22901     +instrumentalness F4_.
22902     +loudness F5_.
22903     +tempo F6_.
22904     +valence F7_.
22905     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:59 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22906     +%macro _vars;
22907     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 120   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.14 seconds
 
NOTE: There were 120 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=6;
NOTE: There were 120 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 96 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.17 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 96 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 96 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 96 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 96 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 96 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "6";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 96 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 96 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 96 observations read from the data set WORK._CLASS.
NOTE: 96 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1241 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:07:59 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22908     +%macro _vars;
22909     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   energy tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 120   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.22 seconds
      cpu time            0.15 seconds
 
NOTE: There were 120 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=6;
NOTE: There were 120 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.24 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   energy tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 120   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: There were 120 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=6;
NOTE: There were 120 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 9 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.20 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 9 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 9 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "6";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 9 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 9 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 9 observations read from the data set WORK._INTERVAL.
NOTE: 9 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 181 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 5 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 5 observations read from the data set WORK._TEMPSTAT.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 51 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="10";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 4 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='10');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 10;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22910     +format
22911     +acousticness F1_.
22912     +danceability F2_.
22913     +energy F3_.
22914     +instrumentalness F4_.
22915     +loudness F5_.
22916     +tempo F6_.
22917     +valence F7_.
22918     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:00 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22919     +%macro _vars;
22920     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2 artist_name;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 100   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: There were 100 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=10;
NOTE: There were 100 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 83 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 83 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 83 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 83 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 83 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 83 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 4 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "10";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 83 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 83 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
NOTE: There were 83 observations read from the data set WORK._CLASS.
NOTE: 83 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1324 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 3 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:01 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22921     +%macro _vars;
22922     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 100   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 100 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=10;
NOTE: There were 100 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 100   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 100 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=10;
NOTE: There were 100 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 4 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "10";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 4 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 4 observations read from the data set WORK._INTERVAL.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 185 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 55 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="24";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 2 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='24');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 24;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:01 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22923     +%macro _vars;
22924     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 99   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
NOTE: There were 99 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=24;
NOTE: There were 99 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "24";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1326 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 57 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="21";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 4 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='21');
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 21;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22925     +format
22926     +acousticness F1_.
22927     +danceability F2_.
22928     +energy F3_.
22929     +instrumentalness F4_.
22930     +loudness F5_.
22931     +tempo F6_.
22932     +valence F7_.
22933     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:02 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22934     +%macro _vars;
22935     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 95   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.11 seconds
 
NOTE: There were 95 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=21;
NOTE: There were 95 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "21";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1328 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:02 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22936     +%macro _vars;
22937     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   energy valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 95   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: There were 95 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=21;
NOTE: There were 95 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.15 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   energy valence;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 95   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
NOTE: There were 95 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=21;
NOTE: There were 95 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 5 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 5 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "21";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 5 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 5 observations read from the data set WORK._INTERVAL.
NOTE: 5 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 190 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 4 observations and 15 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
NOTE: There were 4 observations read from the data set WORK._TEMPSTAT.
NOTE: 4 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 61 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="15";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='15');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 15;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:02 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22938     +%macro _vars;
22939     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 90   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
 
NOTE: There were 90 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=15;
NOTE: There were 90 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.21 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "15";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1329 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 62 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="14";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 2 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='14');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 14;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:03 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22940     +%macro _vars;
22941     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 81   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
NOTE: There were 81 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=14;
NOTE: There were 81 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.21 seconds
      cpu time            0.20 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "14";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1331 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 64 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="19";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 2 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='19');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 19;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:04 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22942     +%macro _vars;
22943     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 81   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: There were 81 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=19;
NOTE: There were 81 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "19";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1333 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 66 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="18";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 2 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='18');
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 18;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:04 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22944     +%macro _vars;
22945     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1 SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 77   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 77 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=18;
NOTE: There were 77 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 2 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 3 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 2 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 2 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "18";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 2 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 2 observations read from the data set WORK._CLASS.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1335 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 2 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 2 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 2 observations read from the data set WORK._TEMPSTAT.
NOTE: 2 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 68 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="9";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 0 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='9');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="13";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 0 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='13');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="20";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='20');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 20;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:05 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22946     +%macro _vars;
22947     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION1;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 74   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
NOTE: There were 74 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=20;
NOTE: There were 74 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "20";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1336 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 69 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="2";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='2');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 2;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:05 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22948     +%macro _vars;
22949     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 73   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
NOTE: There were 73 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=2;
NOTE: There were 73 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "2";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1337 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 70 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="22";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='22');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 22;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:06 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22950     +%macro _vars;
22951     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 70   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 70 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=22;
NOTE: There were 70 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.15 seconds
      cpu time            0.14 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "22";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1338 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 71 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="23";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 0 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='23');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="8";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 0 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='8');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="1";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='1');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT = 1;
NOTE: %INCLUDE (level 1) file X is file EMWS1.PROF2_INTERVAL.FORMAT.SOURCE.
22952     +format
22953     +acousticness F1_.
22954     +danceability F2_.
22955     +energy F3_.
22956     +instrumentalness F4_.
22957     +loudness F5_.
22958     +tempo F6_.
22959     +valence F7_.
22960     +;
MPRINT(SEGMENTSUMMARY):   format acousticness F1_. danceability F2_. energy F3_. instrumentalness F4_. loudness F5_. tempo F6_. valence F7_. ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
*------------------------------------------------------------*
* Prof2: Computing Summary Statistics
*------------------------------------------------------------*
MPRINT(VAR_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(VAR_PROFILE):   data _null_;
MPRINT(VAR_PROFILE):   file _mac;
MPRINT(VAR_PROFILE):   put '%macro _vars;';
MPRINT(VAR_PROFILE):   put '%mend _vars;';
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:06 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22961     +%macro _vars;
22962     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(VAR_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _BOUNDS;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BOUNDS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data=Prof2_TMP(obs=1000000) varout=_STAT(rename=(NAME=VARIABLE));
MPRINT(VAR_PROFILE):   var
MPRINT(VAR_PROFILE):   tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 57   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
NOTE: There were 57 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=1;
NOTE: There were 57 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
 
MPRINT(VAR_PROFILE):   proc sort data=_STAT;
MPRINT(VAR_PROFILE):   by VARIABLE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets library=WORK nolist;
MPRINT(VAR_PROFILE):   modify _STAT;
MPRINT(VAR_PROFILE):   label NMISS = "Missing";
MPRINT(VAR_PROFILE):   label MIN = "Minimum";
MPRINT(VAR_PROFILE):   label MAX = "Maximum";
MPRINT(VAR_PROFILE):   label MEAN = "Mean";
MPRINT(VAR_PROFILE):   label STD = "Standard Deviation";
MPRINT(VAR_PROFILE):   label SKEWNESS = "Skewness";
MPRINT(VAR_PROFILE):   label KURTOSIS = "Kurtosis";
MPRINT(VAR_PROFILE):   run;
 
NOTE: MODIFY was successful for WORK._STAT.DATA.
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VAR_PROFILE):   proc dmdb data = Prof2_TMP(obs=1000000) classout=_temptab(rename=(NAME=VARIABLE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(VAR_PROFILE):   class
MPRINT(VAR_PROFILE):   tempo;
MPRINT(VAR_PROFILE):   run;
 
NOTE: Records processed = 57   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
NOTE: There were 57 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT=1;
NOTE: There were 57 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPTAB has 3 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.14 seconds
      cpu time            0.12 seconds
 
 
MPRINT(VAR_PROFILE):   data _INTERVAL;
MPRINT(VAR_PROFILE):   label VALUE = "Value";
MPRINT(VAR_PROFILE):   label VARIABLE = "Variable";
MPRINT(VAR_PROFILE):   label COUNT = "Frequency Count";
MPRINT(VAR_PROFILE):   label PERCENT = "Percent";
MPRINT(VAR_PROFILE):   set _temptab;
MPRINT(VAR_PROFILE):   format VALUE 12.3 count;
MPRINT(VAR_PROFILE):   value = inputn(level, 'best12.');
MPRINT(VAR_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(VAR_PROFILE):   run;
 
NOTE: There were 3 observations read from the data set WORK._TEMPTAB.
NOTE: The data set WORK._INTERVAL has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VAR_PROFILE):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(VAR_PROFILE):   delete _TEMPTAB _BINNEDDATA _MINMAXDATA;
MPRINT(VAR_PROFILE):   run;
 
NOTE: The file WORK._BINNEDDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._MINMAXDATA (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPTAB (memtype=DATA).
MPRINT(VAR_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _INTERVAL;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "1";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _INTERVAL;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 3 observations read from the data set WORK._INTERVAL.
NOTE: The data set WORK._INTERVAL has 3 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_INTDIST data=_INTERVAL force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._INTERVAL to EMWS1.PROF2_INTDIST.
NOTE: There were 3 observations read from the data set WORK._INTERVAL.
NOTE: 3 observations added.
NOTE: The data set EMWS1.PROF2_INTDIST has 193 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_STAT(KEEP=VARIABLE NMISS MIN MAX MEAN STD SKEWNESS KURTOSIS);
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Input data set is already sorted, no sorting done.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._STAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NUMCAT was not found on DATA file.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 72 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._INTERVAL (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="12";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 0 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='12');
NOTE: The data set WORK._TEMPSTAT has 0 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK.PROF2_TMP (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._CLASS (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   set EMWS1.Prof2_SELVARS;
MPRINT(SEGMENTSUMMARY):   where SegmentVariable="SOM_SEGMENT" and SegmentValue="_OTHER_";
MPRINT(SEGMENTSUMMARY):   if Type eq 'I' then call symput('SEGVARS',symget('SEGVARS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   else call symput('SEGCLASS',symget('SEGCLASS' ) !! ' ' !! trim(left(Variable))) ;
MPRINT(SEGMENTSUMMARY):   run ;
 
NOTE: There were 1 observations read from the data set EMWS1.PROF2_SELVARS.
      WHERE (SegmentVariable='SOM_SEGMENT') and (SegmentValue='_OTHER_');
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Variable;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data Prof2_TMP / view=Prof2_TMP ;
MPRINT(SEGMENTSUMMARY):   set EMWS1.SOM2_TRAIN;
MPRINT(SEGMENTSUMMARY):   where SOM_SEGMENT in( 7 17);
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: DATA STEP view saved on file WORK.PROF2_TMP.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
 
MPRINT(CLASS_PROFILE):   filename _mac catalog 'WORK.MACROS.VARIABLES.SOURCE';
MPRINT(CLASS_PROFILE):   data _null_;
MPRINT(CLASS_PROFILE):   file _mac;
MPRINT(CLASS_PROFILE):   put '%macro _vars;';
MPRINT(CLASS_PROFILE):   put '%mend _vars;';
MPRINT(CLASS_PROFILE):   run;
 
NOTE: The file _MAC is:
      Catalog Name=WORK.MACROS.VARIABLES.SOURCE,
      Catalog Page Size=4096,
      Number of Catalog Pages=5,
      Created=15 Dec 2015 Tue 17:07:50 o'clock,
      Last Modified=15 Dec 2015 Tue 17:08:07 o'clock,
      Filename=C:\Users\-Andris\AppData\Local\Temp\SAS Temporary Files\_TD6740_ANDRAS_\Prc2\macros.sas7bcat,
      Release Created=9.0301M2,Host Created=X64_8PRO
 
NOTE: 2 records were written to the file _MAC.
      The minimum record length was 12.
      The maximum record length was 13.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: %INCLUDE (level 1) file _MAC is file WORK.MACROS.VARIABLES.SOURCE.
22963     +%macro _vars;
22964     +%mend _vars;
NOTE: %INCLUDE (level 1) ending.
MPRINT(CLASS_PROFILE):   filename _mac;
NOTE: Fileref _MAC has been deassigned.
MPRINT(CLASS_PROFILE):   proc dmdb data=Prof2_TMP nonorm classout=_tempclass(rename=(NAME=VARIABLE LEVEL=VALUE FREQUENCY=COUNT FREQPERCENT=PERCENT));
MPRINT(CLASS_PROFILE):   class
MPRINT(CLASS_PROFILE):   SOM_DIMENSION2;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Records processed = 85   Memory used = 511K.
NOTE: There were 2276 observations read from the data set DM.SONGS_WITHID.
NOTE: There were 2276 observations read from the data set EMWS1.IDS_DATA.
NOTE: There were 2276 observations read from the data set EMWS1.STAT2_TRAIN.
NOTE: View WORK.PROF2_TMP.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
NOTE: There were 85 observations read from the data set EMWS1.SOM2_TRAIN.
      WHERE SOM_SEGMENT in (7, 17);
NOTE: There were 85 observations read from the data set WORK.PROF2_TMP.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
 
 
MPRINT(CLASS_PROFILE):   proc sort data=_tempclass;
MPRINT(CLASS_PROFILE):   by VARIABLE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._TEMPCLASS has 1 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   data _CLASS;
MPRINT(CLASS_PROFILE):   label VARIABLE = "Variable";
MPRINT(CLASS_PROFILE):   label VALUE = "Value";
MPRINT(CLASS_PROFILE):   label COUNT = "Frequency Count";
MPRINT(CLASS_PROFILE):   label PERCENT = "Percent";
MPRINT(CLASS_PROFILE):   set _tempclass;
MPRINT(CLASS_PROFILE):   format COUNT;
MPRINT(CLASS_PROFILE):   keep VARIABLE COUNT PERCENT VALUE;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPCLASS.
NOTE: The data set WORK._CLASS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(CLASS_PROFILE):   proc means data=_CLASS noprint;
MPRINT(CLASS_PROFILE):   class VARIABLE;
MPRINT(CLASS_PROFILE):   var COUNT;
MPRINT(CLASS_PROFILE):   output out=_STAT N=NUMCAT;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._STAT has 2 observations and 4 variables.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   data _STAT;
MPRINT(CLASS_PROFILE):   set _STAT;
MPRINT(CLASS_PROFILE):   where _TYPE_=1;
MPRINT(CLASS_PROFILE):   KEEP VARIABLE NUMCAT;
MPRINT(CLASS_PROFILE):   label NUMCAT = "Number of Levels";
MPRINT(CLASS_PROFILE):   format NUMCAT 8.;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: There were 1 observations read from the data set WORK._STAT.
      WHERE _TYPE_=1;
NOTE: The data set WORK._STAT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(CLASS_PROFILE):   proc datasets lib=work nolist;
MPRINT(CLASS_PROFILE):   delete _tempclass;
MPRINT(CLASS_PROFILE):   run;
 
NOTE: Deleting WORK._TEMPCLASS (memtype=DATA).
MPRINT(CLASS_PROFILE):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):  ;
MPRINT(SEGMENTSUMMARY):   data _CLASS;
MPRINT(SEGMENTSUMMARY):   length SegmentVariable $32 SegmentValue $200;
MPRINT(SEGMENTSUMMARY):   retain SegmentVariable "SOM_SEGMENT" SegmentValue "_OTHER_";
MPRINT(SEGMENTSUMMARY):   label Variable = "Variable" value = "Value" count = "Frequency Count" percent = "Percent";
MPRINT(SEGMENTSUMMARY):   set _CLASS;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: The data set WORK._CLASS has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_CLASSDIST data=_CLASS force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._CLASS to EMWS1.PROF2_CLASSDIST.
WARNING: Variable value has different lengths on BASE and DATA files (BASE 34 DATA 12).
NOTE: There were 1 observations read from the data set WORK._CLASS.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1339 observations and 6 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(SEGMENTSUMMARY):   data _tempStat;
MPRINT(SEGMENTSUMMARY):   merge _tempStat _STAT;
MPRINT(SEGMENTSUMMARY):   by VARIABLE;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: There were 1 observations read from the data set WORK._STAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc sort data=_tempStat;
MPRINT(SEGMENTSUMMARY):   by Rank;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: The data set WORK._TEMPSTAT has 1 observations and 8 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc append base=EMWS1.Prof2_STATS data=_tempStat force;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: Appending WORK._TEMPSTAT to EMWS1.PROF2_STATS.
WARNING: Variable NMISS was not found on DATA file.
WARNING: Variable MIN was not found on DATA file.
WARNING: Variable MAX was not found on DATA file.
WARNING: Variable MEAN was not found on DATA file.
WARNING: Variable STD was not found on DATA file.
WARNING: Variable SKEWNESS was not found on DATA file.
WARNING: Variable KURTOSIS was not found on DATA file.
NOTE: There were 1 observations read from the data set WORK._TEMPSTAT.
NOTE: 1 observations added.
NOTE: The data set EMWS1.PROF2_STATS has 73 observations and 15 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(SEGMENTSUMMARY):   proc datasets lib=work nolist mt=(DATA VIEW);
MPRINT(SEGMENTSUMMARY):   delete _segment Prof2_TMP _interval _class _tempStat ;
MPRINT(SEGMENTSUMMARY):   run;
 
NOTE: The file WORK._SEGMENT (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: The file WORK._INTERVAL (memtype=(DATA VIEW)) was not found, but appears on a DELETE statement.
NOTE: Deleting WORK.PROF2_TMP (memtype=VIEW).
NOTE: Deleting WORK._CLASS (memtype=DATA).
NOTE: Deleting WORK._TEMPSTAT (memtype=DATA).
MPRINT(SEGMENTSUMMARY):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   filename X;
NOTE: Fileref X has been deassigned.
MPRINT(TRAIN):   data EMWS1.Prof2_INTDIST;
MPRINT(TRAIN):   set EMWS1.Prof2_INTDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Color = "Color";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then Color = 1;
MPRINT(TRAIN):   else Color = 0;
MPRINT(TRAIN):   run;
 
NOTE: There were 193 observations read from the data set EMWS1.PROF2_INTDIST.
NOTE: The data set EMWS1.PROF2_INTDIST has 193 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(TRAIN):   data EMWS1.Prof2_CLASSDIST;
MPRINT(TRAIN):   set EMWS1.Prof2_CLASSDIST;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Groupindex = "Group Index";
MPRINT(TRAIN):   if SegmentVariable = '_OVERALL_' then GroupIndex = 0;
MPRINT(TRAIN):   else GroupIndex = 1;
MPRINT(TRAIN):   run;
 
NOTE: There were 1339 observations read from the data set EMWS1.PROF2_CLASSDIST.
NOTE: The data set EMWS1.PROF2_CLASSDIST has 1339 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE STATS CLASSDIST INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PROFILEVIEW";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "Profileview";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "COLOR";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "SOM_SEGMENT";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.1324273050448;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;
 
NOTE: The data set WORK.EM_USER_REPORT has 126 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof2_WORTH;
MPRINT(TRAIN):   set EMWS1.Prof2_STATS;
MPRINT(TRAIN):   label SegmentVariable = "Segment Variable" SegmentValue = "Segment Value" Variable = "Variable" Rank = "Rank" Worth = "Worth";
MPRINT(TRAIN):   where WORTH ne .;
MPRINT(TRAIN):   run;
 
NOTE: There were 63 observations read from the data set EMWS1.PROF2_STATS.
      WHERE WORTH not = .;
NOTE: The data set EMWS1.PROF2_WORTH has 63 observations and 15 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "LATTICE";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "1";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "BAR";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profworth";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "VARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "WORTH";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.72118352154324;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 126 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 252 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   data EMWS1.Prof2_SIZE;
MPRINT(TRAIN):   set EMWS1.Prof2_SIZE;
MPRINT(TRAIN):   label percent = "Percent" count = "Frequency Count";
MPRINT(TRAIN):   format PERCENT 5.2;
MPRINT(TRAIN):   format COUNT 12.;
MPRINT(TRAIN):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.PROF2_SIZE.
NOTE: The data set EMWS1.PROF2_SIZE has 24 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "PIE";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "segmentmanysize";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y";
MPRINT(EM_REPORT):   VALUE = "COUNT";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Plot";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "PERCENT";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "SEGMENTVARIABLE";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.28231580615151;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 252 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 379 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "SIZE";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "size";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.00429205596646;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 379 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 505 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "STATS";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "profilevars";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.20155843636093;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 505 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 631 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "CLASSDIST";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clusbarplot";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.10280219470281;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 631 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 757 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   set WORK.EM_USER_REPORT end=eof;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   if eof then do;
MPRINT(EM_REPORT):   id+1;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "INTDIST";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "DATA";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "clushistplot";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "Stats";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.60814226260787;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   end;
MPRINT(EM_REPORT):   run;
 
NOTE: There were 757 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 883 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
 
 
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   proc datasets lib=EMWS1 nolist;
MPRINT(TRAIN):   delete Prof2_SELVARS _SUMMARYVARS DATA_STAT Prof2_MACS(mt=catalog) Prof2_INTERVAL(mt=catalog);
MPRINT(TRAIN):   run;
 
NOTE: The file EMWS1._SUMMARYVARS (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.DATA_STAT (memtype=DATA) was not found, but appears on a DELETE statement.
NOTE: The file EMWS1.PROF2_MACS (memtype=CATALOG) was not found, but appears on a DELETE statement.
NOTE: Deleting EMWS1.PROF2_SELVARS (memtype=DATA).
NOTE: Deleting EMWS1.PROF2_INTERVAL (memtype=CATALOG).
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
22965      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22966      * End TRAIN: Prof2;
MPRINT(EM_DIAGRAM):   * End TRAIN: Prof2;
22967      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22968      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22969      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
22970      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22971      ;
MPRINT(EM_DIAGRAM):   ;
22972      ;
MPRINT(EM_DIAGRAM):   ;
22973      ;
MPRINT(EM_DIAGRAM):   ;
22974      ;
MPRINT(EM_DIAGRAM):   ;
22975      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   ;
22976      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
22977      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   quit;
22978      *------------------------------------------------------------*;
22979      /*; *"; *'; */
22980      ;
22981      run;
22982      quit;
22983      /* Reset EM Options */
22984      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
22985      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
22986      goptions reset=all device=WMF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=WMF NODISPLAY;
22987      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
22988      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
22989      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 883 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 883 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22990      proc freq data=EMWS1.Prof2_WORTH noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof2_WORTH noprint order=data;
22991      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
22992      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 63 observations read from the data set EMWS1.PROF2_WORTH.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
22993      proc freq data=EMWS1.Prof2_SIZE noprint order=data;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Prof2_SIZE noprint order=data;
22994      table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
MPRINT(EM_DIAGRAM):   table SEGMENTVARIABLE/ out=WORK.REPORTVALUE;
22995      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 24 observations read from the data set EMWS1.PROF2_SIZE.
NOTE: The data set WORK.REPORTVALUE has 1 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "15 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:08:10 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                15 December 2015
Time:                17:08:10 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1HZ5948 "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1HZ5948 new;
MPRINT(EM_DIAGRAM):   run;
23097      %let EMEXCEPTIONSTRING=;
23098      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23099      * SCORE: Prof2;
MPRINT(EM_DIAGRAM):   * SCORE: Prof2;
23100      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23101      %let EM_ACTION = SCORE;
23102      %let syscc = 0;
23103      %macro main;
23104         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
23105             options MPRINT;
23106         %end;
23107
23108         filename temp catalog 'sashelp.emexpl.profile_macros.source';
23109         %include temp;
23110         filename temp;
23111
23112         /* Initialize property macro variables */
23113         %SetProperties;
23114
23115         %if %upcase(&EM_ACTION) = CREATE %then %do;
23116
23117             filename temp catalog 'sashelp.emexpl.profile_create.source';
23118             %include temp;
23119             filename temp;
23120             %create;
23121         %end;
23122         %else
23123         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23124
23125             filename temp catalog 'sashelp.emexpl.profile_train.source';
23126             %include temp;
23127             filename temp;
23128             %train;
23129         %end;
23130      %mend main;
23131
23132      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
23133     +%macro SetProperties;
23134     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
23135     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
23136     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
23137     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
23138     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
23139     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
23140     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
23141     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
23142     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
23143     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
23144     +%mend SetProperties;
23147     +%macro makeVarMacros(level= );
23149     +    %let numvars = 0;
23150     +    %let where   = '';
23152     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23153     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
23154     +    %else
23155     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
23157     +    %if &level = INTERVAL %then %do;
23158     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
23159     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23160     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
23161     +    %end;
23162     +    %else %do;
23163     +        %if &level = NOMINAL %then %do;
23164     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
23165     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
23166     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
23167     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
23168     +             %end;
23169     +             %else
23170     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
23172     +        %end;
23173     +        %else %do;
23174     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
23175     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23176     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
23177     +        %end;
23178     +    %end;
23180     +    %if &numvars>0 %then %do;
23181     +         %let numloop = %sysfunc(ceil(&numvars/10000));
23182     +         %let loopcount = 0;
23184     +         %do %while((&numloop - &loopcount) > 0);
23185     +             %let first = %eval((&loopcount*10000) + 1);
23186     +             %let last  = %eval(&first + 10000);
23187     +             %let loopcount = %eval(&loopcount +1);
23188     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
23189     +             filename X catalog "&centry";
23190     +             data _null_;
23191     +                length _STRING_ $80;
23192     +                retain _STRING_ ;
23193     +                file X;
23194     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
23196     +                where &where;
23198     +                if _N_=1 then
23199     +                   put '%macro _PROFVAR;';
23201     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
23202     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
23203     +                   if eof then do;
23204     +                      put _STRING_;
23205     +                      put '%mend _PROFVAR;';
23206     +                   end;
23207     +                end;
23208     +                else do;
23209     +                   put _STRING_;
23210     +                  _string_ = TRIM(NAME);
23211     +                   if eof then do;
23212     +                      put _string_;
23213     +                      put '%mend _PROFVAR;';
23214     +                   end;
23215     +                end;
23216     +             run;
23217     +             filename X;
23218     +         %end;
23219     +    %end;
23221     +%mend makeVarMacros;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End SCORE: Prof2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23224      *------------------------------------------------------------*;
23225      * End SCORE: Prof2;
23226      *------------------------------------------------------------*;
 
23227      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23228      * Prof2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Prof2: Scoring DATA data;
23229      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23230      data EMWS1.Prof2_TRAIN
23231      / view=EMWS1.Prof2_TRAIN
23232      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Prof2_TRAIN / view=EMWS1.Prof2_TRAIN ;
23233      set EMWS1.SOM2_TRAIN
23234      ;
MPRINT(EM_DIAGRAM):   set EMWS1.SOM2_TRAIN ;
23235      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.PROF2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.SOM2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
23236      quit;
 
23238      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
23239      * Prof2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Prof2: Computing metadata for TRAIN data;
23240      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.PROF2_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Prof2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Prof2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Prof2_TRAIN out=WORK.M0H2FWL2 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0H2FWL2;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0H2FWL2(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0H2FWL2;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0H2FWL2;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0EFMPA5 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1MOS83S(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EFMPA5;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.SOM2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.SOM2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Prof2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Prof2";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Prof2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.PROF2_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "15 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17:08:11 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                15 December 2015
Time:                17:08:11 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1L5CWV_ "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Songs\SAS_Miner\Songs\Workspaces\EMWS1\Prof2\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1L5CWV_ new;
MPRINT(EM_DIAGRAM):   run;
23562      %let EMEXCEPTIONSTRING=;
23563      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23564      * REPORT: Prof2;
MPRINT(EM_DIAGRAM):   * REPORT: Prof2;
23565      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23566      %let EM_ACTION = REPORT;
23567      %let syscc = 0;
23568      %macro main;
23569         %if %sysfunc(indexw(&EM_DEBUG, _ALL_)) or %sysfunc(indexw(&EM_DEBUG, SOURCE)) %then %do;
23570             options MPRINT;
23571         %end;
23572
23573         filename temp catalog 'sashelp.emexpl.profile_macros.source';
23574         %include temp;
23575         filename temp;
23576
23577         /* Initialize property macro variables */
23578         %SetProperties;
23579
23580         %if %upcase(&EM_ACTION) = CREATE %then %do;
23581
23582             filename temp catalog 'sashelp.emexpl.profile_create.source';
23583             %include temp;
23584             filename temp;
23585             %create;
23586         %end;
23587         %else
23588         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23589
23590             filename temp catalog 'sashelp.emexpl.profile_train.source';
23591             %include temp;
23592             filename temp;
23593             %train;
23594         %end;
23595      %mend main;
23596
23597      %main;
MPRINT(EM_DIAGRAM):
MPRINT(MAIN):   filename temp catalog 'sashelp.emexpl.profile_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMEXPL.PROFILE_MACROS.SOURCE.
23598     +%macro SetProperties;
23599     +   %em_checkmacro(name=EM_PROPERTY_PROFILEALL,         global=Y, value=N);
23600     +   %em_checkmacro(name=EM_PROPERTY_USEREPORTVARS,      global=Y, value=Y);
23601     +   %em_checkmacro(name=EM_PROPERTY_OTHERPERCENTCUTOFF, global=Y, value=95);
23602     +   %em_checkmacro(name=EM_PROPERTY_TARGETROLE,         global=Y, value=NONE);
23603     +   %em_checkmacro(name=EM_PROPERTY_NUMHISTBARS,        global=Y, value=8);
23604     +   %em_checkmacro(name=EM_PROPERTY_MINWORTH,           global=Y, value=0.01);
23605     +   %em_checkmacro(name=EM_PROPERTY_MAXDEPTH,           global=Y, value=1);
23606     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMREPORT,       global=Y, value=10);
23607     +   %em_checkmacro(name=EM_PROPERTY_MAXNUMINPUT,        global=Y, value=10);
23608     +   %em_checkmacro(name=EM_PROPERTY_PRINTWORTH,         global=Y, value=Y);
23609     +%mend SetProperties;
23612     +%macro makeVarMacros(level= );
23614     +    %let numvars = 0;
23615     +    %let where   = '';
23617     +    %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23618     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL="&level"  and USE in('Y', 'D'));
23619     +    %else
23620     +        %let where = (ROLE = 'REJECTED' and LEVEL="&level" and USE='Y') or (ROLE ='INPUT' and LEVEL="&level" and USE in('Y', 'D'));
23622     +    %if &level = INTERVAL %then %do;
23623     +        %let numvars = %eval( &EM_NUM_INTERVAL_INPUT + &EM_NUM_INTERVAL_REJECTED);
23624     +        %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23625     +             %let numvars = %eval(&numvars + &EM_NUM_INTERVAL_TARGET);
23626     +    %end;
23627     +    %else %do;
23628     +        %if &level = NOMINAL %then %do;
23629     +            %let numvars = %eval(&EM_NUM_BINARY_INPUT + &EM_NUM_NOMINAL_INPUT +  &EM_NUM_BINARY_REJECTED + &EM_NUM_NOMINAL_REJECTED);
23630     +             %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then %do;
23631     +                 %let numvars = %eval(&numvars + &EM_NUM_BINARY_TARGET + &EM_NUM_NOMINAL_TARGET);
23632     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE in('INPUT', 'TARGET') and LEVEL in('NOMINAL', 'BINARY') and USE in('Y', 'D'));
23633     +             %end;
23634     +             %else
23635     +                 %let where = (ROLE = 'REJECTED' and LEVEL in('NOMINAL', 'BINARY') and USE='Y') or (ROLE ='INPUT' and LEVEL in("NOMINAL", "BINARY") and USE in('Y', 'D'));
23637     +        %end;
23638     +        %else %do;
23639     +            %let numvars = %eval(&EM_NUM_ORDINAL_INPUT + &EM_NUM_ORDINAL_REJECTED);
23640     +            %if (%upcase(&EM_PROPERTY_TARGETROLE) eq INPUT) %then
23641     +                %let numvars = %eval(&numvars + &EM_NUM_ORDINAL_TARGET);
23642     +        %end;
23643     +    %end;
23645     +    %if &numvars>0 %then %do;
23646     +         %let numloop = %sysfunc(ceil(&numvars/10000));
23647     +         %let loopcount = 0;
23649     +         %do %while((&numloop - &loopcount) > 0);
23650     +             %let first = %eval((&loopcount*10000) + 1);
23651     +             %let last  = %eval(&first + 10000);
23652     +             %let loopcount = %eval(&loopcount +1);
23653     +             %let centry = &EM_LIB..&EM_NODEID._MACS.&LEVEL._&loopcount..SOURCE;
23654     +             filename X catalog "&centry";
23655     +             data _null_;
23656     +                length _STRING_ $80;
23657     +                retain _STRING_ ;
23658     +                file X;
23659     +                set &EM_DATA_VARIABLESET(firstobs=&first obs=&last) end=eof;
23661     +                where &where;
23663     +                if _N_=1 then
23664     +                   put '%macro _PROFVAR;';
23666     +                if (length(_STRING_) + length(trim(NAME))+ 1  < 80) then do;
23667     +                   _STRING_ = trim(_STRING_)!!' '!!trim(NAME);
23668     +                   if eof then do;
23669     +                      put _STRING_;
23670     +                      put '%mend _PROFVAR;';
23671     +                   end;
23672     +                end;
23673     +                else do;
23674     +                   put _STRING_;
23675     +                  _string_ = TRIM(NAME);
23676     +                   if eof then do;
23677     +                      put _string_;
23678     +                      put '%mend _PROFVAR;';
23679     +                   end;
23680     +                end;
23681     +             run;
23682     +             filename X;
23683     +         %end;
23684     +    %end;
23686     +%mend makeVarMacros;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End REPORT: Prof2;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23689      *------------------------------------------------------------*;
23690      * End REPORT: Prof2;
23691      *------------------------------------------------------------*;
 
23692      /* Reset EM Options */
23693      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):    options formchar="|----|+|---+=|-/\<>*";
23694      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
23695      goptions reset=all device=WMF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=WMF NODISPLAY;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
