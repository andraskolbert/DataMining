*------------------------------------------------------------*
User:                -Andris
Date:                13 December 2015
Time:                23:36:20 o'clock
Site:                70107571
Platform:            X64_8PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:36:04 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                13 December 2015
Time:                23:36:04 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1SA2_MA "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1SA2_MA new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:36:04 o'clock" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                -Andris";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:36:04 o'clock" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                -Andris";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
20512      proc freq data=EMWS1.Plot3_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Plot3_VariableSet noprint;
20513      table ROLE*LEVEL/out=WORK.Plot3META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Plot3META;
20514      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.PLOT3_VARIABLESET.
NOTE: The data set WORK.PLOT3META has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
 
 
20515      proc print data=WORK.Plot3META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Plot3META label noobs;
20516      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
20517      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
20518      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
20519      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
20520      run;
 
NOTE: There were 4 observations read from the data set WORK.PLOT3META.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20521      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    data WORK.M2HGC1BA;
MPRINT(EM_DIAGRAM):   set WORK.M2HGC1BA;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'TARGET';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role in('REJECTED' 'PREDICT' 'RESIDUAL' 'GROUP' 'ASSESS') and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'INPUT' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   role = 'INPUT';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'FREQ' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   role = 'FREQ';
MPRINT(EM_DIAGRAM):   output;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else delete;
MPRINT(EM_DIAGRAM):   run;
20542      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
20543      * Plot3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot3: DMDBClass Macro ;
20544      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20545      %macro DMDBClass;
20546          ClaimsRate(ASC) Compensation(ASC) CustomerAge(ASC) CustomerMonetaryValue(ASC)
20547         EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLivingArea(ASC)
20548         GrossMonthlySalary(ASC) HasChildren(ASC) Health(ASC) Household(ASC) Life(ASC)
20549         Motor(ASC)
20550      %mend DMDBClass;
20551      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20552      * Plot3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot3: Create DMDB;
20553      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20554      proc dmdb batch data=EMWS1.Ids2_DATA
20555      dmdbcat=WORK.Plot3_DMDB
20556      maxlevel = 23
20557      nonorm
20558      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids2_DATA dmdbcat=WORK.Plot3_DMDB maxlevel = 23 nonorm ;
MPRINT(EM_DIAGRAM):   class
20559      class %DMDBClass;
MPRINT(DMDBCLASS):   ClaimsRate(ASC) Compensation(ASC) CustomerAge(ASC) CustomerMonetaryValue(ASC) EducationalDegree(ASC) FirstPolicyYear(ASC) GeographicLivingArea(ASC) GrossMonthlySalary(ASC) HasChildren(ASC) Health(ASC) Household(ASC) Life(ASC)
Motor(ASC)
MPRINT(EM_DIAGRAM):  ;
20560      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS2_DATA.VIEW used (Total process time):
      real time           0.54 seconds
      cpu time            0.14 seconds
 
NOTE: There were 10296 observations read from the data set DM.INSURANCE_BASE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS2_DATA.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.62 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20561      quit;
 
20562      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20563      * Plot3: Creating univariate histograms;
MPRINT(EM_DIAGRAM):   * Plot3: Creating univariate histograms;
20564      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20565      goptions ftext="SWISS";
MPRINT(EM_DIAGRAM):   goptions ftext="SWISS";
20566      goptions nodisplay device=PNG;
MPRINT(EM_DIAGRAM):   goptions nodisplay device=PNG;
20567      axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
MPRINT(EM_DIAGRAM):   axis1 width=2 offset=(1,1) label=(rotate=90 angle=270) minor=none;
20568      axis2 width=2 minor=none;
MPRINT(EM_DIAGRAM):   axis2 width=2 minor=none;
20569      pattern1 value=solid;
MPRINT(EM_DIAGRAM):   pattern1 value=solid;
20570      proc gchart
20571      data=EMWS1.Ids2_DATA gout=WORK.Plot3GRAPH;
MPRINT(EM_DIAGRAM):   proc gchart data=EMWS1.Ids2_DATA gout=WORK.Plot3GRAPH;
20572      *;
MPRINT(EM_DIAGRAM):   *;
20573      title "ClaimsRate";
MPRINT(EM_DIAGRAM):   title "ClaimsRate";
20574      vbar ClaimsRate /
20575      name = "ClaimsRate" description = "ClaimsRate"
MPRINT(EM_DIAGRAM):   vbar ClaimsRate / name = "ClaimsRate" description = "ClaimsRate" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20576      FREQ
MPRINT(EM_DIAGRAM):   run;
20577      type=FREQ
20578      noframe
20579      missing
20580      raxis=axis1 maxis=axis2;
20581      run;
 
WARNING: The VBAR/VBAR3D chart for ClaimsRate could not be labeled because the labels are wider than the bars.
20582      title "Compensation";
MPRINT(EM_DIAGRAM):   title "Compensation";
20583      vbar Compensation /
20584      name = "Compensation" description = "Compensation"
MPRINT(EM_DIAGRAM):   vbar Compensation / name = "Compensation" description = "Compensation" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20585      FREQ
MPRINT(EM_DIAGRAM):   run;
20586      type=FREQ
20587      noframe
20588      missing
20589      raxis=axis1 maxis=axis2;
20590      run;
 
WARNING: The VBAR/VBAR3D chart for Compensation could not be labeled because the labels are wider than the bars.
20591      title "CustomerAge";
MPRINT(EM_DIAGRAM):   title "CustomerAge";
20592      vbar CustomerAge /
20593      name = "CustomerAge" description = "CustomerAge"
MPRINT(EM_DIAGRAM):   vbar CustomerAge / name = "CustomerAge" description = "CustomerAge" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20594      FREQ
MPRINT(EM_DIAGRAM):   run;
20595      type=FREQ
20596      noframe
20597      missing
20598      raxis=axis1 maxis=axis2;
20599      run;
 
WARNING: The VBAR/VBAR3D chart for CustomerAge could not be labeled because the labels are wider than the bars.
20600      title "CustomerMonetaryValue";
MPRINT(EM_DIAGRAM):   title "CustomerMonetaryValue";
20601      vbar CustomerMonetaryValue /
20602      name = "CustomerMonetaryValue" description = "CustomerMonetaryValue"
MPRINT(EM_DIAGRAM):   vbar CustomerMonetaryValue / name = "CustomerMonetaryValue" description = "CustomerMonetaryValue" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20603      FREQ
MPRINT(EM_DIAGRAM):   run;
20604      type=FREQ
20605      noframe
20606      missing
20607      raxis=axis1 maxis=axis2;
20608      run;
 
WARNING: The VBAR/VBAR3D chart for CustomerMonetaryValue could not be labeled because the labels are wider than the bars.
NOTE: Graph's name, CUSTOMER, changed to CUSTOME1. CUSTOMER is already used or not a valid SAS name.
20609      title "EducationalDegree";
MPRINT(EM_DIAGRAM):   title "EducationalDegree";
20610      vbar EducationalDegree /
20611      name = "EducationalDegree" description = "EducationalDegree"
MPRINT(EM_DIAGRAM):   vbar EducationalDegree / name = "EducationalDegree" description = "EducationalDegree" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20612      FREQ
MPRINT(EM_DIAGRAM):   run;
20613      type=FREQ
20614      noframe
20615      missing
20616      raxis=axis1 maxis=axis2;
20617      run;
 
20618      title "FirstPolicyYear";
MPRINT(EM_DIAGRAM):   title "FirstPolicyYear";
20619      vbar FirstPolicyYear /
20620      name = "FirstPolicyYear" description = "FirstPolicyYear"
MPRINT(EM_DIAGRAM):   vbar FirstPolicyYear / name = "FirstPolicyYear" description = "FirstPolicyYear" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20621      FREQ
MPRINT(EM_DIAGRAM):   run;
20622      type=FREQ
20623      noframe
20624      missing
20625      raxis=axis1 maxis=axis2;
20626      run;
 
WARNING: The VBAR/VBAR3D chart for FirstPolicyYear could not be labeled because the labels are wider than the bars.
20627      title "GeographicLivingArea";
MPRINT(EM_DIAGRAM):   title "GeographicLivingArea";
20628      vbar GeographicLivingArea /
20629      name = "GeographicLivingArea" description = "GeographicLivingArea"
20630      FREQ
MPRINT(EM_DIAGRAM):   vbar GeographicLivingArea / name = "GeographicLivingArea" description = "GeographicLivingArea" FREQ type=FREQ noframe missing discrete raxis=axis1 maxis=axis2;
20631      type=FREQ
MPRINT(EM_DIAGRAM):   run;
20632      noframe
20633      missing
20634      discrete
20635      raxis=axis1 maxis=axis2;
20636      run;
 
20637      title "GrossMonthlySalary";
MPRINT(EM_DIAGRAM):   title "GrossMonthlySalary";
20638      vbar GrossMonthlySalary /
20639      name = "GrossMonthlySalary" description = "GrossMonthlySalary"
MPRINT(EM_DIAGRAM):   vbar GrossMonthlySalary / name = "GrossMonthlySalary" description = "GrossMonthlySalary" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20640      FREQ
MPRINT(EM_DIAGRAM):   run;
20641      type=FREQ
20642      noframe
20643      missing
20644      raxis=axis1 maxis=axis2;
20645      run;
 
WARNING: The VBAR/VBAR3D chart for GrossMonthlySalary could not be labeled because the labels are wider than the bars.
20646      title "HasChildren";
MPRINT(EM_DIAGRAM):   title "HasChildren";
20647      vbar HasChildren /
20648      name = "HasChildren" description = "HasChildren"
20649      FREQ
MPRINT(EM_DIAGRAM):   vbar HasChildren / name = "HasChildren" description = "HasChildren" FREQ type=FREQ noframe missing discrete raxis=axis1 maxis=axis2;
20650      type=FREQ
MPRINT(EM_DIAGRAM):   run;
20651      noframe
20652      missing
20653      discrete
20654      raxis=axis1 maxis=axis2;
20655      run;
 
20656      title "Health";
MPRINT(EM_DIAGRAM):   title "Health";
20657      vbar Health /
20658      name = "Health" description = "Health"
MPRINT(EM_DIAGRAM):   vbar Health / name = "Health" description = "Health" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20659      FREQ
MPRINT(EM_DIAGRAM):   run;
20660      type=FREQ
20661      noframe
20662      missing
20663      raxis=axis1 maxis=axis2;
20664      run;
 
WARNING: The VBAR/VBAR3D chart for Health could not be labeled because the labels are wider than the bars.
20665      title "Household";
MPRINT(EM_DIAGRAM):   title "Household";
20666      vbar Household /
20667      name = "Household" description = "Household"
MPRINT(EM_DIAGRAM):   vbar Household / name = "Household" description = "Household" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20668      FREQ
MPRINT(EM_DIAGRAM):   run;
20669      type=FREQ
20670      noframe
20671      missing
20672      raxis=axis1 maxis=axis2;
20673      run;
 
WARNING: The VBAR/VBAR3D chart for Household could not be labeled because the labels are wider than the bars.
20674      title "Life";
MPRINT(EM_DIAGRAM):   title "Life";
20675      vbar Life /
20676      name = "Life" description = "Life"
MPRINT(EM_DIAGRAM):   vbar Life / name = "Life" description = "Life" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20677      FREQ
MPRINT(EM_DIAGRAM):   run;
20678      type=FREQ
20679      noframe
20680      missing
20681      raxis=axis1 maxis=axis2;
20682      run;
 
WARNING: The VBAR/VBAR3D chart for Life could not be labeled because the labels are wider than the bars.
20683      title "Motor";
MPRINT(EM_DIAGRAM):   title "Motor";
20684      vbar Motor /
20685      name = "Motor" description = "Motor"
MPRINT(EM_DIAGRAM):   vbar Motor / name = "Motor" description = "Motor" FREQ type=FREQ noframe missing raxis=axis1 maxis=axis2;
20686      FREQ
MPRINT(EM_DIAGRAM):   run;
20687      type=FREQ
20688      noframe
20689      missing
20690      raxis=axis1 maxis=axis2;
20691      run;
 
WARNING: The VBAR/VBAR3D chart for Motor could not be labeled because the labels are wider than the bars.
20692      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: View EMWS1.IDS2_DATA.VIEW used (Total process time):
      real time           7.51 seconds
      cpu time            0.64 seconds
 
NOTE: There were 10296 observations read from the data set DM.INSURANCE_BASE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS2_DATA.
NOTE: PROCEDURE GCHART used (Total process time):
      real time           7.68 seconds
      cpu time            0.64 seconds
 
 
20693      title;
MPRINT(EM_DIAGRAM):   title;
20694      goptions display;
MPRINT(EM_DIAGRAM):   goptions display;
20695      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20696      * Plot3: Creating variable by interval target charts;
MPRINT(EM_DIAGRAM):   * Plot3: Creating variable by interval target charts;
20697      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20698      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20699      * Plot3: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Plot3: DMDBClass Macro ;
20700      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20701      %macro DMDBClass;
20702          EducationalDegree(ASC) GeographicLivingArea(ASC) HasChildren(ASC)
20703      %mend DMDBClass;
20704      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20705      * Plot3: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Plot3: DMDBVar Macro ;
20706      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
20707      %macro DMDBVar;
20708          ClaimsRate Compensation CustomerAge CustomerMonetaryValue FirstPolicyYear
20709         GrossMonthlySalary Health Household Life Motor
20710      %mend DMDBVar;
20711      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20712      * Plot3: Create DMDB;
MPRINT(EM_DIAGRAM):   * Plot3: Create DMDB;
20713      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20714      proc dmdb batch data=EMWS1.Ids2_DATA
20715      dmdbcat=WORK.Plot3_DMDB
20716      classout=work.classoutDs
20717      varout=work.varoutDs
20718      maxlevel = 513
20719      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Ids2_DATA dmdbcat=WORK.Plot3_DMDB classout=work.classoutDs varout=work.varoutDs maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
20720      class %DMDBClass;
MPRINT(DMDBCLASS):   EducationalDegree(ASC) GeographicLivingArea(ASC) HasChildren(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
20721      var %DMDBVar;
MPRINT(DMDBVAR):   ClaimsRate Compensation CustomerAge CustomerMonetaryValue FirstPolicyYear GrossMonthlySalary Health Household Life Motor
MPRINT(EM_DIAGRAM):  ;
20722      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 10296   Memory used = 511K.
NOTE: View EMWS1.IDS2_DATA.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.10 seconds
 
NOTE: There were 10296 observations read from the data set DM.INSURANCE_BASE.
NOTE: There were 10296 observations read from the data set EMWS1.IDS2_DATA.
NOTE: The data set WORK.CLASSOUTDS has 13 observations and 9 variables.
NOTE: The data set WORK.VAROUTDS has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.30 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
20723      quit;
20724      *--- end code ---*;
 
20725      title8;
MPRINT(EM_DIAGRAM):    title8;
20726      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_classvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Class Variables";
20727      proc print data=work.classoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.classoutDs;
20728      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.CLASSOUTDS.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20729      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
20730      delete classoutDs;
MPRINT(EM_DIAGRAM):   delete classoutDs;
20731      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.CLASSOUTDS (memtype=DATA).
20732      title8;
MPRINT(EM_DIAGRAM):   title8;
20733      title8;
MPRINT(EM_DIAGRAM):   title8;
20734      title8 "%sysfunc(sasmsg(sashelp.dmine, rpt_intvars_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title8 "Interval Variables";
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20735      proc print data=work.varoutDs;
MPRINT(EM_DIAGRAM):   proc print data=work.varoutDs;
20736      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.VAROUTDS.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20737      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
20738      delete varoutDs;
MPRINT(EM_DIAGRAM):   delete varoutDs;
20739      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.VAROUTDS (memtype=DATA).
20740      title8;
MPRINT(EM_DIAGRAM):   title8;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20741      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=WORK nolist;
20742      delete Plot3_DMDB;
MPRINT(EM_DIAGRAM):   delete Plot3_DMDB;
20743      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file WORK.PLOT3_DMDB (memtype=DATA) was not found, but appears on a DELETE statement.
20744      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
20745      proc datasets lib=WORK nolist;
MPRINT(EM_DIAGRAM):    proc datasets lib=WORK nolist;
20746      delete Plot3_DMDB / memtype=catalog;
MPRINT(EM_DIAGRAM):   delete Plot3_DMDB / memtype=catalog;
20747      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.PLOT3_DMDB (memtype=CATALOG).
20748      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
20749      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20750      * Plot3: Copying graphs to node folder;
MPRINT(EM_DIAGRAM):   * Plot3: Copying graphs to node folder;
20751      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20752      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\ClaimsRate.gif";
MPRINT(EM_DIAGRAM):   filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\ClaimsRate.gif";
20753      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20754      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20755      replay CLAIMSRA;
MPRINT(EM_DIAGRAM):   replay CLAIMSRA;
NOTE:  57 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\ClaimsRate.gif
20756      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           1.40 seconds
      cpu time            0.04 seconds
 
 
20757      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20758      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20759      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Compensation.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Compensation.gif";
20760      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20761      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20762      replay COMPENSA;
MPRINT(EM_DIAGRAM):   replay COMPENSA;
NOTE:  65 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Compensation.gif
20763      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.11 seconds
      cpu time            0.04 seconds
 
 
20764      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20765      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20766      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\CustomerMonetaryValue.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\CustomerMonetaryValue.gif";
20767      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20768      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20769      replay CUSTOME1;
MPRINT(EM_DIAGRAM):   replay CUSTOME1;
NOTE:  69 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\CustomerMonetaryValue.gif
20770      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20771      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20772      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20773      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\CustomerAge.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\CustomerAge.gif";
20774      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20775      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20776      replay CUSTOMER;
MPRINT(EM_DIAGRAM):   replay CUSTOMER;
NOTE:  55 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\CustomerAge.gif
20777      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20778      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20779      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20780      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\EducationalDegree.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\EducationalDegree.gif";
20781      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20782      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20783      replay EDUCATIO;
MPRINT(EM_DIAGRAM):   replay EDUCATIO;
NOTE:  59 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\EducationalDegree.gif
20784      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
20785      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20786      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20787      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\FirstPolicyYear.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\FirstPolicyYear.gif";
20788      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20789      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20790      replay FIRSTPOL;
MPRINT(EM_DIAGRAM):   replay FIRSTPOL;
NOTE:  61 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\FirstPolicyYear.gif
20791      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20792      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20793      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20794      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\GeographicLivingArea.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\GeographicLivingArea.gif";
20795      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20796      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20797      replay GEOGRAPH;
MPRINT(EM_DIAGRAM):   replay GEOGRAPH;
NOTE:  51 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\GeographicLivingArea.gif
20798      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20799      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20800      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20801      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\GrossMonthlySalary.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\GrossMonthlySalary.gif";
20802      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20803      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20804      replay GROSSMON;
MPRINT(EM_DIAGRAM):   replay GROSSMON;
NOTE:  65 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\GrossMonthlySalary.gif
20805      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
20806      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20807      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20808      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\HasChildren.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\HasChildren.gif";
20809      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20810      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20811      replay HASCHILD;
MPRINT(EM_DIAGRAM):   replay HASCHILD;
NOTE:  45 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\HasChildren.gif
20812      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20813      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20814      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20815      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Health.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Health.gif";
20816      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20817      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20818      replay HEALTH;
MPRINT(EM_DIAGRAM):   replay HEALTH;
NOTE:  63 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Health.gif
20819      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
20820      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20821      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20822      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Household.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Household.gif";
20823      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20824      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20825      replay HOUSEHOL;
MPRINT(EM_DIAGRAM):   replay HOUSEHOL;
NOTE:  65 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Household.gif
20826      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
20827      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20828      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20829      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Life.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Life.gif";
20830      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20831      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20832      replay LIFE;
MPRINT(EM_DIAGRAM):   replay LIFE;
NOTE:  65 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Life.gif
20833      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
20834      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20835      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
20836      filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Motor.gif";
MPRINT(EM_DIAGRAM):    filename gsasfile "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Motor.gif";
20837      goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
MPRINT(EM_DIAGRAM):   goptions device= GIF display gaccess= gsasfile gsfmode= replace cback= white;
20838      proc greplay igout=WORK.PLOT3GRAPH nofs;
MPRINT(EM_DIAGRAM):   proc greplay igout=WORK.PLOT3GRAPH nofs;
NOTE: Building list of graphs from the catalog.
 
NOTE: Enter greplay commands or statements.
20839      replay MOTOR;
MPRINT(EM_DIAGRAM):   replay MOTOR;
NOTE:  65 records written to F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\GRAPH\Motor.gif
20840      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE GREPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
20841      goptions device=win;
MPRINT(EM_DIAGRAM):   goptions device=win;
20842      filename gsasfile;
MPRINT(EM_DIAGRAM):   filename gsasfile;
NOTE: Fileref GSASFILE has been deassigned.
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:36:19 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                13 December 2015
Time:                23:36:19 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0K6XDDD "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0K6XDDD new;
MPRINT(EM_DIAGRAM):   run;
20944      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20945      * Plot3: Scoring DATA data;
MPRINT(EM_DIAGRAM):   * Plot3: Scoring DATA data;
20946      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
20947      data EMWS1.Plot3_TRAIN
20948      / view=EMWS1.Plot3_TRAIN
20949      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Plot3_TRAIN / view=EMWS1.Plot3_TRAIN ;
20950      set EMWS1.Ids2_DATA
20951      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Ids2_DATA ;
20952      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: DATA STEP view saved on file EMWS1.PLOT3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.IDS2_DATA.VIEW used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
20953      quit;
 
20954      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
20955      * Plot3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Plot3: Computing metadata for TRAIN data;
20956      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.PLOT3_TRAIN.VIEW used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Plot3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Plot3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Plot3_TRAIN out=WORK.M1NIKROA noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NIKROA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NIKROA(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NIKROA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NIKROA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M11LRBYA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2QFWJ07(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   set WORK.M11LRBYA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Ids2_DATA noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Ids2_CMeta_DATA out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Plot3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Plot3";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Plot3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.PLOT3_TRAIN.VIEW used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "13 December 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "23:36:20 o'clock" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                13 December 2015
Time:                23:36:20 o'clock
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O08ELC8_ "F:\Dropbox\NOVA\1st\DataMining\Project\DataMining\Insurance\SAS_Miner\Insurance\Workspaces\EMWS1\Plot3\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O08ELC8_ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
